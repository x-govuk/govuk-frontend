{"version":3,"file":"accordion.mjs","sources":["../../../../src/govuk/components/accordion/accordion.mjs"],"sourcesContent":["import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n */\nexport class Accordion {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /** @private */\n  browserSupportsSessionStorage = false\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor ($module, config) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      return this\n    }\n\n    this.$sections = $sections\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls () {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () => this.onShowOrHideAllToggle())\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) => this.onBeforeMatch(event))\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders () {\n    // Loop through sections\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        return\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections to\n      // open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup ($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$span || !$heading) {\n      return\n    }\n\n    // Create a button element that will replace the '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute('aria-controls', `${this.$module.id}-content-${index + 1}`)\n\n    // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n    for (let i = 0; i < $span.attributes.length; i++) {\n      const attr = $span.attributes.item(i)\n      // Add all attributes but not ID as this is being added to\n      // the section heading ($headingText)\n      if (attr.nodeName !== 'id') {\n        $button.setAttribute(attr.nodeName, attr.nodeValue)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by `aria-labelledby` on the\n    // hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $headingTextFocus.innerHTML = $span.innerHTML\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading\n    // For the snippet to work with JavaScript, it must be added before adding the page element to the\n    // page's DOM. See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the original `div` to the\n      // new `span`\n      // This is because the summary line text is now inside a button element, which can only contain\n      // phrasing content\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (let j = 0, l = $summary.attributes.length; j < l; ++j) {\n        const nodeName = $summary.attributes.item(j).nodeName\n        const nodeValue = $summary.attributes.item(j).nodeValue\n        $summarySpan.setAttribute(nodeName, nodeValue)\n      }\n\n      // Copy original contents of summary to the new summary span\n      $summarySpanFocus.innerHTML = $summary.innerHTML\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.parentNode.replaceChild($summarySpan, $summary)\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch (event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle ($section) {\n    const expanded = this.isExpanded($section)\n    this.setExpanded(!expanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle () {\n    const nowExpanded = !this.checkIfAllSectionsOpen()\n\n    // Loop through sections\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      // Store the state in sessionStorage when a change is triggered\n      this.storeState($section)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded (expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(`.${this.sectionShowHideTextClass}`)\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$showHideIcon ||\n      !($showHideText instanceof HTMLElement) ||\n      !$button ||\n      !$content) {\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.innerText = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(`.${this.sectionHeadingTextClass}`)\n    if ($headingText instanceof HTMLElement) {\n      ariaLabelParts.push($headingText.innerText.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary instanceof HTMLElement) {\n      ariaLabelParts.push($summary.innerText.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded ($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  checkIfAllSectionsOpen () {\n    // Get a count of all the Accordion sections\n    const sectionsCount = this.$sections.length\n    // Get a count of all Accordion sections that are expanded\n    const expandedSectionCount = this.$module.querySelectorAll(`.${this.sectionExpandedClass}`).length\n    const areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n    return areAllSectionsOpen\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton (expanded) {\n    const newButtonText = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.innerText = newButtonText\n\n    // Swap icon, toggle class\n    if (expanded) {\n      this.$showAllIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      this.$showAllIcon.classList.add(this.downChevronIconClass)\n    }\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  storeState ($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      // We need a unique way of identifying each content in the Accordion. Since\n      // an `#id` should be unique and an `id` is required for `aria-` attributes\n      // `id` can be safely used.\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = $button.getAttribute('aria-expanded')\n\n        // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState)\n        }\n      }\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState ($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = contentId ? window.sessionStorage.getItem(contentId) : null\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by dividing its contents\n   * into thematic chunks.\n   * See https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl () {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add('govuk-visually-hidden', this.sectionHeadingDividerClass)\n    $punctuationEl.innerHTML = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @default\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n}\n\nconst helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    const testString = 'this is the test string'\n    let result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result = window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n"],"names":["Accordion","constructor","$module","config","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","browserSupportsSessionStorage","$showAllButton","$showAllIcon","$showAllText","HTMLElement","document","body","classList","contains","mergeConfigs","defaults","normaliseDataset","dataset","I18n","extractConfigByNamespace","querySelectorAll","length","helper","checkForSessionStorage","initControls","initSectionHeaders","areAllSectionsOpen","checkIfAllSectionsOpen","updateShowAllButton","createElement","setAttribute","add","appendChild","$accordionControls","insertBefore","firstChild","addEventListener","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","i","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","index","$span","$heading","$summary","$button","id","attributes","attr","item","nodeName","nodeValue","$headingText","$headingTextFocus","innerHTML","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","j","l","parentNode","replaceChild","removeChild","$fragment","target","Element","closest","expanded","storeState","nowExpanded","$content","newButtonText","t","innerText","ariaLabelParts","push","trim","ariaLabelMessage","join","removeAttribute","remove","sectionsCount","expandedSectionCount","toString","rememberExpanded","contentId","getAttribute","contentState","window","sessionStorage","setItem","getItem","$punctuationEl","Object","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","testString","result","removeItem","exception"],"mappings":"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"}