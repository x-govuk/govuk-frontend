{"version":3,"file":"radios.bundle.js","sources":["../../../../src/govuk/components/radios/radios.mjs"],"sourcesContent":["/**\n * Radios component\n */\nexport class Radios {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block – for\n   * example, a radio for 'Phone' could reveal an additional form field for the\n   * user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the radio state.\n   *\n   * @param {Element} $module - HTML element to use for radios\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $inputs = $module.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      return this\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes, or where the\n      // target element does not exist.\n      if (!targetId || !document.getElementById(targetId)) {\n        return\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals () {\n    this.$inputs.forEach(($input) => this.syncConditionalRevealWithInputState($input))\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState ($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target && $target.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked)\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module – if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a radio\n   * in another $module)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick (event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (!($clickedInput instanceof HTMLInputElement) || $clickedInput.type !== 'radio') {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $allInputs = document.querySelectorAll('input[type=\"radio\"][aria-controls]')\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n}\n"],"names":["Radios","constructor","$module","$inputs","HTMLElement","document","body","classList","contains","querySelectorAll","length","forEach","$input","targetId","getAttribute","getElementById","setAttribute","removeAttribute","window","addEventListener","syncAllConditionalReveals","event","handleClick","syncConditionalRevealWithInputState","$target","inputIsChecked","checked","toString","toggle","$clickedInput","target","HTMLInputElement","type","$allInputs","$clickedInputForm","form","$clickedInputName","name","hasSameFormOwner","hasSameName"],"mappings":";;;;;;EAAA;EACA;EACA;EACO,MAAMA,MAAM,CAAC;EAOlB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACEC,WAAWA,CAAEC,OAAO,EAAE;EApBtB;EAAA,IAAA,IAAA,CACAA,OAAO,GAAA,KAAA,CAAA,CAAA;EAEP;EAAA,IAAA,IAAA,CACAC,OAAO,GAAA,KAAA,CAAA,CAAA;EAiBL,IAAA,IAAI,EAAED,OAAO,YAAYE,WAAW,CAAC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;EACtG,MAAA,OAAO,IAAI,CAAA;EACb,KAAA;;EAEA;EACA,IAAA,MAAML,OAAO,GAAGD,OAAO,CAACO,gBAAgB,CAAC,qBAAqB,CAAC,CAAA;EAC/D,IAAA,IAAI,CAACN,OAAO,CAACO,MAAM,EAAE;EACnB,MAAA,OAAO,IAAI,CAAA;EACb,KAAA;MAEA,IAAI,CAACR,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAI,CAACC,OAAO,GAAGA,OAAO,CAAA;EAEtB,IAAA,IAAI,CAACA,OAAO,CAACQ,OAAO,CAAEC,MAAM,IAAK;EAC/B,MAAA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,YAAY,CAAC,oBAAoB,CAAC,CAAA;;EAE1D;EACA;QACA,IAAI,CAACD,QAAQ,IAAI,CAACR,QAAQ,CAACU,cAAc,CAACF,QAAQ,CAAC,EAAE;EACnD,QAAA,OAAA;EACF,OAAA;;EAEA;EACA;EACAD,MAAAA,MAAM,CAACI,YAAY,CAAC,eAAe,EAAEH,QAAQ,CAAC,CAAA;EAC9CD,MAAAA,MAAM,CAACK,eAAe,CAAC,oBAAoB,CAAC,CAAA;EAC9C,KAAC,CAAC,CAAA;;EAEF;EACA;EACA;MACAC,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,MAAM,IAAI,CAACC,yBAAyB,EAAE,CAAC,CAAA;;EAE3E;EACA;EACA;MACA,IAAI,CAACA,yBAAyB,EAAE,CAAA;;EAEhC;EACA,IAAA,IAAI,CAAClB,OAAO,CAACiB,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC,CAAA;EAC5E,GAAA;;EAEA;EACF;EACA;EACA;EACA;EACED,EAAAA,yBAAyBA,GAAI;EAC3B,IAAA,IAAI,CAACjB,OAAO,CAACQ,OAAO,CAAEC,MAAM,IAAK,IAAI,CAACW,mCAAmC,CAACX,MAAM,CAAC,CAAC,CAAA;EACpF,GAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACEW,mCAAmCA,CAAEX,MAAM,EAAE;EAC3C,IAAA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,YAAY,CAAC,eAAe,CAAC,CAAA;MACrD,IAAI,CAACD,QAAQ,EAAE;EACb,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,MAAMW,OAAO,GAAGnB,QAAQ,CAACU,cAAc,CAACF,QAAQ,CAAC,CAAA;MACjD,IAAIW,OAAO,IAAIA,OAAO,CAACjB,SAAS,CAACC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;EACtE,MAAA,MAAMiB,cAAc,GAAGb,MAAM,CAACc,OAAO,CAAA;QAErCd,MAAM,CAACI,YAAY,CAAC,eAAe,EAAES,cAAc,CAACE,QAAQ,EAAE,CAAC,CAAA;QAC/DH,OAAO,CAACjB,SAAS,CAACqB,MAAM,CAAC,mCAAmC,EAAE,CAACH,cAAc,CAAC,CAAA;EAChF,KAAA;EACF,GAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACEH,WAAWA,CAAED,KAAK,EAAE;EAClB,IAAA,MAAMQ,aAAa,GAAGR,KAAK,CAACS,MAAM,CAAA;;EAElC;MACA,IAAI,EAAED,aAAa,YAAYE,gBAAgB,CAAC,IAAIF,aAAa,CAACG,IAAI,KAAK,OAAO,EAAE;EAClF,MAAA,OAAA;EACF,KAAA;;EAEA;EACA;EACA;EACA,IAAA,MAAMC,UAAU,GAAG5B,QAAQ,CAACI,gBAAgB,CAAC,oCAAoC,CAAC,CAAA;EAElF,IAAA,MAAMyB,iBAAiB,GAAGL,aAAa,CAACM,IAAI,CAAA;EAC5C,IAAA,MAAMC,iBAAiB,GAAGP,aAAa,CAACQ,IAAI,CAAA;EAE5CJ,IAAAA,UAAU,CAACtB,OAAO,CAAEC,MAAM,IAAK;EAC7B,MAAA,MAAM0B,gBAAgB,GAAG1B,MAAM,CAACuB,IAAI,KAAKD,iBAAiB,CAAA;EAC1D,MAAA,MAAMK,WAAW,GAAG3B,MAAM,CAACyB,IAAI,KAAKD,iBAAiB,CAAA;QAErD,IAAIG,WAAW,IAAID,gBAAgB,EAAE;EACnC,QAAA,IAAI,CAACf,mCAAmC,CAACX,MAAM,CAAC,CAAA;EAClD,OAAA;EACF,KAAC,CAAC,CAAA;EACJ,GAAA;EACF;;;;;;;;"}