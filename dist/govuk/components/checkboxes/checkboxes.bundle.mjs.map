{"version":3,"file":"checkboxes.bundle.mjs","sources":["../../../../src/govuk/components/checkboxes/checkboxes.mjs"],"sourcesContent":["/**\n * Checkboxes component\n */\nexport class Checkboxes {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block –\n   * for example, a checkbox for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the checkbox state.\n   *\n   * @param {Element} $module - HTML element to use for checkboxes\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $inputs = $module.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      return this\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip checkboxes without data-aria-controls attributes, or where the\n      // target element does not exist.\n      if (!targetId || !document.getElementById(targetId)) {\n        return\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals () {\n    this.$inputs.forEach(($input) => this.syncConditionalRevealWithInputState($input))\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState ($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target && $target.classList.contains('govuk-checkboxes__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle('govuk-checkboxes__conditional--hidden', !inputIsChecked)\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a “None of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept ($input) {\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = ($input.form === $inputWithSameName.form)\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive' behaviour,\n   * and uncheck them. This helps prevent someone checking both a regular checkbox and a\n   * \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs ($input) {\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const allInputsWithSameNameAndExclusiveBehaviour = document.querySelectorAll(\n      `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = ($input.form === $exclusiveInput.form)\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module – if the click occurred on a checkbox, sync\n   * the state of any associated conditional reveal with the checkbox state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick (event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (!($clickedInput instanceof HTMLInputElement) || $clickedInput.type !== 'checkbox') {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive = ($clickedInput.getAttribute('data-behaviour') === 'exclusive')\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n}\n"],"names":["Checkboxes","constructor","$module","$inputs","HTMLElement","document","body","classList","contains","querySelectorAll","length","forEach","$input","targetId","getAttribute","getElementById","setAttribute","removeAttribute","window","addEventListener","syncAllConditionalReveals","event","handleClick","syncConditionalRevealWithInputState","$target","inputIsChecked","checked","toString","toggle","unCheckAllInputsExcept","allInputsWithSameName","name","$inputWithSameName","hasSameFormOwner","form","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","target","HTMLInputElement","type","hasAriaControls","hasBehaviourExclusive"],"mappings":"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"}