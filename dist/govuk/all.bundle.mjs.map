{"version":3,"file":"all.bundle.mjs","sources":["../../src/govuk/common/govuk-frontend-version.mjs","../../src/govuk/common/index.mjs","../../src/govuk/common/normalise-dataset.mjs","../../src/govuk/i18n.mjs","../../src/govuk/components/accordion/accordion.mjs","../../src/govuk/components/button/button.mjs","../../src/govuk/common/closest-attribute-value.mjs","../../src/govuk/components/character-count/character-count.mjs","../../src/govuk/components/checkboxes/checkboxes.mjs","../../src/govuk/components/error-summary/error-summary.mjs","../../src/govuk/components/exit-this-page/exit-this-page.mjs","../../src/govuk/components/header/header.mjs","../../src/govuk/components/notification-banner/notification-banner.mjs","../../src/govuk/components/radios/radios.mjs","../../src/govuk/components/skip-link/skip-link.mjs","../../src/govuk/components/tabs/tabs.mjs","../../src/govuk/all.mjs"],"sourcesContent":["/*\n * This variable is automatically overwritten during builds and releases.\n * It doesn't need to be updated manually.\n */\n\n/**\n * GOV.UK Frontend release version\n *\n * {@link https://github.com/alphagov/govuk-frontend/releases}\n */\nexport const version = 'development'\n","/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n *\n * @module common/index\n */\n\n/**\n * Config flattening function\n *\n * Takes any number of objects, flattens them into namespaced key-value pairs,\n * (e.g. \\{'i18n.showSection': 'Show section'\\}) and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @private\n * @returns {{ [key: string]: unknown }} A flattened object of key-value pairs.\n */\nexport function mergeConfigs (/* configObject1, configObject2, ...configObjects */) {\n  /**\n   * Function to take nested objects and flatten them to a dot-separated keyed\n   * object. Doing this means we don't need to do any deep/recursive merging of\n   * each of our objects, nor transform our dataset from a flat list into a\n   * nested object.\n   *\n   * @param {{ [key: string]: unknown }} configObject - Deeply nested object\n   * @returns {{ [key: string]: unknown }} Flattened object with dot-separated keys\n   */\n  const flattenObject = function (configObject) {\n    // Prepare an empty return object\n    /** @type {{ [key: string]: unknown }} */\n    const flattenedObject = {}\n\n    /**\n     * Our flattening function, this is called recursively for each level of\n     * depth in the object. At each level we prepend the previous level names to\n     * the key using `prefix`.\n     *\n     * @param {Partial<{ [key: string]: unknown }>} obj - Object to flatten\n     * @param {string} [prefix] - Optional dot-separated prefix\n     */\n    const flattenLoop = function (obj, prefix) {\n      // Loop through keys...\n      for (const key in obj) {\n        // Check to see if this is a prototypical key/value,\n        // if it is, skip it.\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n          continue\n        }\n        const value = obj[key]\n        const prefixedKey = prefix ? `${prefix}.${key}` : key\n        if (typeof value === 'object') {\n          // If the value is a nested object, recurse over that too\n          flattenLoop(value, prefixedKey)\n        } else {\n          // Otherwise, add this value to our return object\n          flattenedObject[prefixedKey] = value\n        }\n      }\n    }\n\n    // Kick off the recursive loop\n    flattenLoop(configObject)\n    return flattenedObject\n  }\n\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the remaining passed objects and push their keys\n  // one-by-one into configObject. Any duplicate keys will override the existing\n  // key with the new value.\n  for (let i = 0; i < arguments.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- Ignore mismatch between arguments types\n    const obj = flattenObject(arguments[i])\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        formattedConfigObject[key] = obj[key]\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from a flattened config\n * object, removing the namespace in the process.\n *\n * @private\n * @param {{ [key: string]: unknown }} configObject - The object to extract key-value pairs from.\n * @param {string} namespace - The namespace to filter keys with.\n * @returns {{ [key: string]: unknown }} Flattened object with dot-separated key namespace removed\n * @throws {Error} Config object required\n * @throws {Error} Namespace string required\n */\nexport function extractConfigByNamespace (configObject, namespace) {\n  // Check we have what we need\n  if (!configObject || typeof configObject !== 'object') {\n    throw new Error('Provide a `configObject` of type \"object\".')\n  }\n\n  if (!namespace || typeof namespace !== 'string') {\n    throw new Error('Provide a `namespace` of type \"string\" to filter the `configObject` by.')\n  }\n\n  /** @type {{ [key: string]: unknown }} */\n  const newObject = {}\n\n  for (const key in configObject) {\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n    // Check if the first namespace matches the configured namespace\n    if (Object.prototype.hasOwnProperty.call(configObject, key) && keyParts[0] === namespace) {\n      // Remove the first item (the namespace) from the parts array,\n      // but only if there is more than one part (we don't want blank keys!)\n      if (keyParts.length > 1) {\n        keyParts.shift()\n      }\n      // Join the remaining parts back together\n      const newKey = keyParts.join('.')\n      // Add them to our new object\n      newObject[newKey] = configObject[key]\n    }\n  }\n  return newObject\n}\n","/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @private\n * @param {string} value - The value to normalise\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString (value) {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const trimmedValue = value.trim()\n\n  if (trimmedValue === 'true') {\n    return true\n  }\n\n  if (trimmedValue === 'false') {\n    return false\n  }\n\n  // Empty / whitespace-only strings are considered finite so we need to check\n  // the length of the trimmed string as well\n  if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n    return Number(trimmedValue)\n  }\n\n  return value\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using normaliseData function\n *\n * @private\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {{ [key: string]: unknown }} Normalised dataset\n */\nexport function normaliseDataset (dataset) {\n  /** @type {{ [key: string]: unknown }} */\n  const out = {}\n\n  for (const key in dataset) {\n    out[key] = normaliseString(dataset[key])\n  }\n\n  return out\n}\n","/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @private\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @param {{ [key: string]: unknown }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor (translations, config) {\n    // Make list of translations available throughout function\n    this.translations = translations || {}\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = (config && config.locale) || document.documentElement.lang || 'en'\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t (lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (options && typeof options.count === 'number') {\n      // Get the plural suffix\n      lookupKey = `${lookupKey}.${this.getPluralSuffix(lookupKey, options.count)}`\n    }\n\n    // Fetch the translation string for that lookup key\n    const translationString = this.translations[lookupKey]\n\n    if (typeof translationString === 'string') {\n      // Check for ${} placeholders in the translation string\n      if (translationString.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error('i18n: cannot replace placeholders in string if no option data provided')\n        }\n\n        return this.replacePlaceholders(translationString, options)\n      } else {\n        return translationString\n      }\n    } else {\n      // If the key wasn't found in our translations object,\n      // return the lookup key itself as the fallback\n      return lookupKey\n    }\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders (translationString, options) {\n    /** @type {Intl.NumberFormat | undefined} */\n    let formatter\n\n    if (this.hasIntlNumberFormatSupport()) {\n      formatter = new Intl.NumberFormat(this.locale)\n    }\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (placeholderValue === false || (\n            typeof placeholderValue !== 'number' &&\n            typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter ? formatter.format(placeholderValue) : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        } else {\n          throw new Error(`i18n: no data found to replace ${placeholderWithBraces} placeholder in string`)\n        }\n      })\n  }\n\n  /**\n   * Check to see if the browser supports Intl and Intl.PluralRules.\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The browser supports the Intl class (true in IE11)\n   * - The implementation of Intl supports PluralRules (NOT true in IE11)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport () {\n    return Boolean(window.Intl && ('PluralRules' in window.Intl && Intl.PluralRules.supportedLocalesOf(this.locale).length))\n  }\n\n  /**\n   * Check to see if the browser supports Intl and Intl.NumberFormat.\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The browser supports the Intl class (true in IE11)\n   * - The implementation of Intl supports NumberFormat (also true in IE11)\n   * - The browser/OS has number formatting rules for the current locale (browser dependent)\n   *\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlNumberFormatSupport () {\n    return Boolean(window.Intl && ('NumberFormat' in window.Intl && Intl.NumberFormat.supportedLocalesOf(this.locale).length))\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form â€“ if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix (lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    count = Number(count)\n    if (!isFinite(count)) { return 'other' }\n\n    let preferredForm\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    if (this.hasIntlPluralRulesSupport()) {\n      preferredForm = new Intl.PluralRules(this.locale).select(count)\n    } else {\n      preferredForm = this.selectPluralFormUsingFallbackRules(count)\n    }\n\n    // Use the correct plural form if provided\n    if (`${lookupKey}.${preferredForm}` in this.translations) {\n      return preferredForm\n      // Fall back to `other` if the plural form is missing, but log a warning\n      // to the console\n    } else if (`${lookupKey}.other` in this.translations) {\n      if (console && 'warn' in console) {\n        console.warn(`i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`)\n      }\n\n      return 'other'\n      // If the required `other` plural form is missing, all we can do is error\n    } else {\n      throw new Error(\n        `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n      )\n    }\n  }\n\n  /**\n   * Get the plural form using our fallback implementation\n   *\n   * This is split out into a separate function to make it easier to test the\n   * fallback behaviour in an environment where Intl.PluralRules exists.\n   *\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The pluralisation form for count in this locale.\n   */\n  selectPluralFormUsingFallbackRules (count) {\n    // Currently our custom code can only handle positive integers, so let's\n    // make sure our number is one of those.\n    count = Math.abs(Math.floor(count))\n\n    const ruleset = this.getPluralRulesForLocale()\n\n    if (ruleset) {\n      return I18n.pluralRules[ruleset](count)\n    }\n\n    return 'other'\n  }\n\n  /**\n   * Work out which pluralisation rules to use for the current locale\n   *\n   * The locale may include a regional indicator (such as en-GB), but we don't\n   * usually care about this part, as pluralisation rules are usually the same\n   * regardless of region. There are exceptions, however, (e.g. Portuguese) so\n   * this searches by both the full and shortened locale codes, just to be sure.\n   *\n   * @returns {string | undefined} The name of the pluralisation rule to use (a key for one\n   *   of the functions in this.pluralRules)\n   */\n  getPluralRulesForLocale () {\n    const locale = this.locale\n    const localeShort = locale.split('-')[0]\n\n    // Look through the plural rules map to find which `pluralRule` is\n    // appropriate for our current `locale`.\n    for (const pluralRule in I18n.pluralRulesMap) {\n      if (Object.prototype.hasOwnProperty.call(I18n.pluralRulesMap, pluralRule)) {\n        const languages = I18n.pluralRulesMap[pluralRule]\n        for (let i = 0; i < languages.length; i++) {\n          if (languages[i] === locale || languages[i] === localeShort) {\n            return pluralRule\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Map of plural rules to languages where those rules apply.\n   *\n   * Note: These groups are named for the most dominant or recognisable language\n   * that uses each system. The groupings do not imply that the languages are\n   * related to one another. Many languages have evolved the same systems\n   * independently of one another.\n   *\n   * Code to support more languages can be found in the i18n spike:\n   * {@link https://github.com/alphagov/govuk-frontend/blob/spike-i18n-support/src/govuk/i18n.mjs}\n   *\n   * Languages currently supported:\n   *\n   * Arabic: Arabic (ar)\n   * Chinese: Burmese (my), Chinese (zh), Indonesian (id), Japanese (ja),\n   *   Javanese (jv), Korean (ko), Malay (ms), Thai (th), Vietnamese (vi)\n   * French: Armenian (hy), Bangla (bn), French (fr), Gujarati (gu), Hindi (hi),\n   *   Persian Farsi (fa), Punjabi (pa), Zulu (zu)\n   * German: Afrikaans (af), Albanian (sq), Azerbaijani (az), Basque (eu),\n   *   Bulgarian (bg), Catalan (ca), Danish (da), Dutch (nl), English (en),\n   *   Estonian (et), Finnish (fi), Georgian (ka), German (de), Greek (el),\n   *   Hungarian (hu), Luxembourgish (lb), Norwegian (no), Somali (so),\n   *   Swahili (sw), Swedish (sv), Tamil (ta), Telugu (te), Turkish (tr),\n   *   Urdu (ur)\n   * Irish: Irish Gaelic (ga)\n   * Russian: Russian (ru), Ukrainian (uk)\n   * Scottish: Scottish Gaelic (gd)\n   * Spanish: European Portuguese (pt-PT), Italian (it), Spanish (es)\n   * Welsh: Welsh (cy)\n   *\n   * @type {{ [key: string]: string[] }}\n   */\n  static pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: [\n      'af', 'sq', 'az', 'eu', 'bg', 'ca', 'da', 'nl', 'en', 'et', 'fi', 'ka',\n      'de', 'el', 'hu', 'lb', 'no', 'so', 'sw', 'sv', 'ta', 'te', 'tr', 'ur'\n    ],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  }\n\n  /**\n   * Different pluralisation rule sets\n   *\n   * Returns the appropriate suffix for the plural form associated with `n`.\n   * Possible suffixes: 'zero', 'one', 'two', 'few', 'many', 'other' (the actual\n   * meaning of each differs per locale). 'other' should always exist, even in\n   * languages without plurals, such as Chinese.\n   * {@link https://cldr.unicode.org/index/cldr-spec/plural-rules}\n   *\n   * The count must be a positive integer. Negative numbers and decimals aren't accounted for\n   *\n   * @type {{ [key: string]: (count: number) => PluralRule }}\n   */\n  static pluralRules = {\n    /* eslint-disable jsdoc/require-jsdoc */\n    arabic (n) {\n      if (n === 0) { return 'zero' }\n      if (n === 1) { return 'one' }\n      if (n === 2) { return 'two' }\n      if (n % 100 >= 3 && n % 100 <= 10) { return 'few' }\n      if (n % 100 >= 11 && n % 100 <= 99) { return 'many' }\n      return 'other'\n    },\n    chinese () {\n      return 'other'\n    },\n    french (n) {\n      return n === 0 || n === 1 ? 'one' : 'other'\n    },\n    german (n) {\n      return n === 1 ? 'one' : 'other'\n    },\n    irish (n) {\n      if (n === 1) { return 'one' }\n      if (n === 2) { return 'two' }\n      if (n >= 3 && n <= 6) { return 'few' }\n      if (n >= 7 && n <= 10) { return 'many' }\n      return 'other'\n    },\n    russian (n) {\n      const lastTwo = n % 100\n      const last = lastTwo % 10\n      if (last === 1 && lastTwo !== 11) { return 'one' }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) { return 'few' }\n      if (last === 0 || (last >= 5 && last <= 9) || (lastTwo >= 11 && lastTwo <= 14)) { return 'many' }\n      // Note: The 'other' suffix is only used by decimal numbers in Russian.\n      // We don't anticipate it being used, but it's here for consistency.\n      return 'other'\n    },\n    scottish (n) {\n      if (n === 1 || n === 11) { return 'one' }\n      if (n === 2 || n === 12) { return 'two' }\n      if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) { return 'few' }\n      return 'other'\n    },\n    spanish (n) {\n      if (n === 1) { return 'one' }\n      if (n % 1000000 === 0 && n !== 0) { return 'many' }\n      return 'other'\n    },\n    welsh (n) {\n      if (n === 0) { return 'zero' }\n      if (n === 1) { return 'one' }\n      if (n === 2) { return 'two' }\n      if (n === 3) { return 'few' }\n      if (n === 6) { return 'many' }\n      return 'other'\n    }\n    /* eslint-enable jsdoc/require-jsdoc */\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n */\nexport class Accordion {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /** @private */\n  browserSupportsSessionStorage = false\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor ($module, config) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      return this\n    }\n\n    this.$sections = $sections\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls () {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () => this.onShowOrHideAllToggle())\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) => this.onBeforeMatch(event))\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders () {\n    // Loop through sections\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        return\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections to\n      // open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup ($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$span || !$heading) {\n      return\n    }\n\n    // Create a button element that will replace the '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute('aria-controls', `${this.$module.id}-content-${index + 1}`)\n\n    // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n    for (let i = 0; i < $span.attributes.length; i++) {\n      const attr = $span.attributes.item(i)\n      // Add all attributes but not ID as this is being added to\n      // the section heading ($headingText)\n      if (attr.nodeName !== 'id') {\n        $button.setAttribute(attr.nodeName, attr.nodeValue)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by `aria-labelledby` on the\n    // hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $headingTextFocus.innerHTML = $span.innerHTML\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading\n    // For the snippet to work with JavaScript, it must be added before adding the page element to the\n    // page's DOM. See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the original `div` to the\n      // new `span`\n      // This is because the summary line text is now inside a button element, which can only contain\n      // phrasing content\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (let j = 0, l = $summary.attributes.length; j < l; ++j) {\n        const nodeName = $summary.attributes.item(j).nodeName\n        const nodeValue = $summary.attributes.item(j).nodeValue\n        $summarySpan.setAttribute(nodeName, nodeValue)\n      }\n\n      // Copy original contents of summary to the new summary span\n      $summarySpanFocus.innerHTML = $summary.innerHTML\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.parentNode.replaceChild($summarySpan, $summary)\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch (event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle ($section) {\n    const expanded = this.isExpanded($section)\n    this.setExpanded(!expanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle () {\n    const nowExpanded = !this.checkIfAllSectionsOpen()\n\n    // Loop through sections\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      // Store the state in sessionStorage when a change is triggered\n      this.storeState($section)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded (expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(`.${this.sectionShowHideTextClass}`)\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$showHideIcon ||\n      !($showHideText instanceof HTMLElement) ||\n      !$button ||\n      !$content) {\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.innerText = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(`.${this.sectionHeadingTextClass}`)\n    if ($headingText instanceof HTMLElement) {\n      ariaLabelParts.push($headingText.innerText.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary instanceof HTMLElement) {\n      ariaLabelParts.push($summary.innerText.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded ($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  checkIfAllSectionsOpen () {\n    // Get a count of all the Accordion sections\n    const sectionsCount = this.$sections.length\n    // Get a count of all Accordion sections that are expanded\n    const expandedSectionCount = this.$module.querySelectorAll(`.${this.sectionExpandedClass}`).length\n    const areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n    return areAllSectionsOpen\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton (expanded) {\n    const newButtonText = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.innerText = newButtonText\n\n    // Swap icon, toggle class\n    if (expanded) {\n      this.$showAllIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      this.$showAllIcon.classList.add(this.downChevronIconClass)\n    }\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  storeState ($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      // We need a unique way of identifying each content in the Accordion. Since\n      // an `#id` should be unique and an `id` is required for `aria-` attributes\n      // `id` can be safely used.\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = $button.getAttribute('aria-expanded')\n\n        // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState)\n        }\n      }\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState ($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = contentId ? window.sessionStorage.getItem(contentId) : null\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by dividing its contents\n   * into thematic chunks.\n   * See https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl () {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add('govuk-visually-hidden', this.sectionHeadingDividerClass)\n    $punctuationEl.innerHTML = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @default\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n}\n\nconst helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    const testString = 'this is the test string'\n    let result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result = window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\n\nconst KEY_SPACE = 32\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n */\nexport class Button {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   *\n   * @param {Element} $module - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor ($module, config) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.$module.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$module.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can activate things with the 'button'\n   * role, so we need to match the functionality of native HTML buttons\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown (event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.keyCode !== KEY_SPACE) {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if ($target instanceof HTMLElement && $target.getAttribute('role') === 'button') {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen. This\n   * stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce (event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @default\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n","/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @private\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue ($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { extractConfigByNamespace, mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n */\nexport class CharacterCount {\n  /** @private */\n  $module\n\n  /** @private */\n  $textarea\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $visibleCountMessage = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $screenReaderCountMessage = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /**\n   * @private\n   * @type {CharacterCountConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength = Infinity\n\n  /**\n   * @param {Element} $module - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor ($module, config) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    const $textarea = $module.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      return this\n    }\n\n    // Read config set using dataset ('data-' values)\n    const datasetConfig = normaliseDataset($module.dataset)\n\n    // To ensure data-attributes take complete precedence, even if they change the\n    // type of count, we need to reset the `maxlength` and `maxwords` from the\n    // JavaScript config.\n    //\n    // We can't mutate `config`, though, as it may be shared across multiple\n    // components inside `initAll`.\n    /** @type {CharacterCountConfig} */\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    this.config = mergeConfigs(\n      CharacterCount.defaults,\n      config || {},\n      configOverrides,\n      datasetConfig\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'), {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue($module, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    if ('maxwords' in this.config && this.config.maxwords) {\n      this.maxLength = this.config.maxwords\n    } else if ('maxlength' in this.config && this.config.maxlength) {\n      this.maxLength = this.config.maxlength\n    } else {\n      return this\n    }\n\n    this.$module = $module\n    this.$textarea = $textarea\n\n    const $textareaDescription = document.getElementById(`${this.$textarea.id}-info`)\n    if (!$textareaDescription) {\n      return\n    }\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    if ($textareaDescription.innerText.match(/^\\s*$/)) {\n      $textareaDescription.innerText = this.i18n.t('textareaDescription', { count: this.maxLength })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className = 'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $screenReaderCountMessage)\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents () {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp () {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify the\n   * fields by directly changing its `value`. These changes don't trigger events\n   * in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check if\n   * the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus () {\n    this.valueChecker = window.setInterval(() => {\n      if (!this.lastInputTimestamp || (Date.now() - 500) >= this.lastInputTimestamp) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur () {\n    // Cancel value checking on blur\n    clearInterval(this.valueChecker)\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged () {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage () {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage () {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n\n    // If input is over the threshold, remove the disabled class which renders the\n    // counter invisible.\n    if (this.isOverThreshold()) {\n      this.$visibleCountMessage.classList.remove('govuk-character-count__message--disabled')\n    } else {\n      this.$visibleCountMessage.classList.add('govuk-character-count__message--disabled')\n    }\n\n    // Update styles\n    if (remainingNumber < 0) {\n      this.$textarea.classList.add('govuk-textarea--error')\n      this.$visibleCountMessage.classList.remove('govuk-hint')\n      this.$visibleCountMessage.classList.add('govuk-error-message')\n    } else {\n      this.$textarea.classList.remove('govuk-textarea--error')\n      this.$visibleCountMessage.classList.remove('govuk-error-message')\n      this.$visibleCountMessage.classList.add('govuk-hint')\n    }\n\n    // Update message\n    this.$visibleCountMessage.innerText = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage () {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.innerText = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count (text) {\n    if ('maxwords' in this.config && this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) || [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    } else {\n      return text.length\n    }\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage () {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n\n    const countType = 'maxwords' in this.config && this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage (remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix = remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, { count: Math.abs(remainingNumber) })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold () {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = maxLength * this.config.threshold / 100\n\n    return (thresholdValue <= currentLength)\n  }\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @default\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {CharacterCountConfigWithMaxLength | CharacterCountConfigWithMaxWords} CharacterCountConfig\n */\n\n/**\n * Character count config (with maximum number of characters)\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfigWithMaxLength\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count config (with maximum number of words)\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfigWithMaxWords\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @typedef {import('../../i18n.mjs').TranslationPluralForms} TranslationPluralForms\n */\n","/**\n * Checkboxes component\n */\nexport class Checkboxes {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block â€“\n   * for example, a checkbox for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the checkbox state.\n   *\n   * @param {Element} $module - HTML element to use for checkboxes\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $inputs = $module.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      return this\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip checkboxes without data-aria-controls attributes, or where the\n      // target element does not exist.\n      if (!targetId || !document.getElementById(targetId)) {\n        return\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals () {\n    this.$inputs.forEach(($input) => this.syncConditionalRevealWithInputState($input))\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState ($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target && $target.classList.contains('govuk-checkboxes__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle('govuk-checkboxes__conditional--hidden', !inputIsChecked)\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a â€œNone of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept ($input) {\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = ($input.form === $inputWithSameName.form)\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive' behaviour,\n   * and uncheck them. This helps prevent someone checking both a regular checkbox and a\n   * \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs ($input) {\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const allInputsWithSameNameAndExclusiveBehaviour = document.querySelectorAll(\n      `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = ($input.form === $exclusiveInput.form)\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a checkbox, sync\n   * the state of any associated conditional reveal with the checkbox state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick (event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (!($clickedInput instanceof HTMLInputElement) || $clickedInput.type !== 'checkbox') {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive = ($clickedInput.getAttribute('data-behaviour') === 'exclusive')\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n}\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in configuration.\n */\nexport class ErrorSummary {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ErrorSummaryConfig}\n   */\n  config\n\n  /**\n   *\n   * @param {Element} $module - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor ($module, config) {\n    // Some consuming code may not be passing a module,\n    // for example if they initialise the component\n    // on their own by directly passing the result\n    // of `document.querySelector`.\n    // To avoid breaking further JavaScript initialisation\n    // we need to safeguard against this so things keep\n    // working the same now we read the elements data attributes\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      ErrorSummary.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.setFocus()\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Focus the error summary\n   *\n   * @private\n   */\n  setFocus () {\n    if (this.config.disableAutoFocus) {\n      return\n    }\n\n    // Set tabindex to -1 to make the element programmatically focusable, but\n    // remove it on blur as the error summary doesn't need to be focused again.\n    this.$module.setAttribute('tabindex', '-1')\n\n    this.$module.addEventListener('blur', () => {\n      this.$module.removeAttribute('tabindex')\n    })\n\n    this.$module.focus()\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick (event) {\n    const $target = event.target\n    if (this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our labels\n   * or legends appear above the input, this means the user will be presented with\n   * an input without any context, as the label or legend will be off the top of\n   * the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and then\n   * focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is announced\n   * (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget ($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = this.getFragmentFromUrl($target.href)\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input to\n    // avoid extra scrolling in browsers that don't support `preventScroll` (which\n    // at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get fragment from URL\n   *\n   * Extract the fragment (everything after the hash) from a URL, but not including\n   * the hash.\n   *\n   * @private\n   * @param {string} url - URL\n   * @returns {string | undefined} Fragment from URL, without the hash\n   */\n  getFragmentFromUrl (url) {\n    if (url.indexOf('#') === -1) {\n      return undefined\n    }\n\n    return url.split('#').pop()\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no associated\n   *   legend or label can be found\n   */\n  getAssociatedLegendOrLabel ($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if there\n        // is one.\n        if ($input instanceof HTMLInputElement && ($input.type === 'checkbox' || $input.type === 'radio')) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldsetâ€™s legend (instead of\n        // the label associated with the input) if the input would end up in the\n        // top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return document.querySelector(`label[for='${$input.getAttribute('id')}']`) ||\n      $input.closest('label')\n  }\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @default\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit This Page component\n */\nexport class ExitThisPage {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ExitThisPageConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element} $module - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor ($module, config) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    const $button = $module.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLElement)) {\n      return this\n    }\n\n    this.config = mergeConfigs(\n      ExitThisPage.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n    this.$module = $module\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector('.govuk-js-exit-this-page-skiplink')\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan () {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$module.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler () {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener('click', this.handleClick.bind(this))\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator () {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator () {\n    // Show or hide the indicator container depending on keypressCounter value\n    if (this.keypressCounter > 0) {\n      this.$indicatorContainer.classList.add('govuk-exit-this-page__indicator--visible')\n    } else {\n      this.$indicatorContainer.classList.remove('govuk-exit-this-page__indicator--visible')\n    }\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage () {\n    this.$updateSpan.innerText = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.innerText = this.i18n.t('activated')\n\n    window.location.href = this.$button.getAttribute('href')\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick (event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress (event) {\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another keyâ€”so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (\n      (event.key === 'Shift' || event.keyCode === 16 || event.which === 16) &&\n      !this.lastKeyWasModified\n    ) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId !== null) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId !== null) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.innerText = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.innerText = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId !== null) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer () {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    window.clearTimeout(this.keypressTimeoutId)\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer () {\n    window.clearTimeout(this.keypressTimeoutId)\n    this.keypressTimeoutId = null\n\n    this.keypressCounter = 0\n    this.$updateSpan.innerText = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      this.$updateSpan.innerText = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @deprecated Will be made private in v5.0\n   */\n  resetPage () {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.innerText = ''\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @default\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n","/**\n * Header component\n */\nexport class Header {\n  /** @private */\n  $module\n\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to\n   * big and back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to\n   * detect when a screen size change happens. We rely on it being null if the\n   * feature isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the browser\n   * viewport moves between states.\n   *\n   * @param {Element} $module - HTML element to use for header\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n    this.$menuButton = $module.querySelector('.govuk-js-header-toggle')\n    this.$menu = this.$menuButton && $module.querySelector(\n      `#${this.$menuButton.getAttribute('aria-controls')}`\n    )\n\n    if (\n      !(\n        this.$menuButton instanceof HTMLElement ||\n        this.$menu instanceof HTMLElement\n      )\n    ) {\n      return this\n    }\n\n    // Set the matchMedia to the govuk-frontend desktop breakpoint\n    this.mql = window.matchMedia('(min-width: 48.0625em)')\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.syncState())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.syncState())\n    }\n\n    this.syncState()\n    this.$menuButton.addEventListener('click', () => this.handleMenuButtonClick())\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  syncState () {\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick () {\n    this.menuIsOpen = !this.menuIsOpen\n    this.syncState()\n  }\n}\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\n\n/**\n * Notification Banner component\n */\nexport class NotificationBanner {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {NotificationBannerConfig}\n   */\n  config\n\n  /**\n   * @param {Element} $module - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor ($module, config) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      NotificationBanner.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.setFocus()\n  }\n\n  /**\n   * Focus the element\n   *\n   * If `role=\"alert\"` is set, focus the element to help some assistive technologies\n   * prioritise announcing it.\n   *\n   * You can turn off the auto-focus functionality by setting `data-disable-auto-focus=\"true\"` in the\n   * component HTML. You might wish to do this based on user research findings, or to avoid a clash\n   * with another element which should be focused when the page loads.\n   *\n   * @private\n   */\n  setFocus () {\n    if (this.config.disableAutoFocus) {\n      return\n    }\n\n    if (this.$module.getAttribute('role') !== 'alert') {\n      return\n    }\n\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // Remove the tabindex on blur as the component doesn't need to be focusable after the page has\n    // loaded.\n    if (!this.$module.getAttribute('tabindex')) {\n      this.$module.setAttribute('tabindex', '-1')\n\n      this.$module.addEventListener('blur', () => {\n        this.$module.removeAttribute('tabindex')\n      })\n    }\n\n    this.$module.focus()\n  }\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @default\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` â€“ in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n","/**\n * Radios component\n */\nexport class Radios {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block â€“ for\n   * example, a radio for 'Phone' could reveal an additional form field for the\n   * user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the radio state.\n   *\n   * @param {Element} $module - HTML element to use for radios\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $inputs = $module.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      return this\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes, or where the\n      // target element does not exist.\n      if (!targetId || !document.getElementById(targetId)) {\n        return\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals () {\n    this.$inputs.forEach(($input) => this.syncConditionalRevealWithInputState($input))\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState ($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target && $target.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked)\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a radio\n   * in another $module)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick (event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (!($clickedInput instanceof HTMLInputElement) || $clickedInput.type !== 'radio') {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $allInputs = document.querySelectorAll('input[type=\"radio\"][aria-controls]')\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n}\n","/**\n * Skip link component\n */\nexport class SkipLink {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $linkedElement = null\n\n  /** @private */\n  linkedElementListener = false\n\n  /**\n   *\n   * @param {Element} $module - HTML element to use for skip link\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLAnchorElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    this.$module = $module\n\n    // Check for linked element\n    const $linkedElement = this.getLinkedElement()\n    if (!$linkedElement) {\n      return\n    }\n\n    this.$linkedElement = $linkedElement\n    this.$module.addEventListener('click', () => this.focusLinkedElement())\n  }\n\n  /**\n   * Get linked element\n   *\n   * @private\n   * @returns {HTMLElement | null} $linkedElement - DOM element linked to from the skip link\n   */\n  getLinkedElement () {\n    const linkedElementId = this.getFragmentFromUrl()\n    if (!linkedElementId) {\n      return null\n    }\n\n    return document.getElementById(linkedElementId)\n  }\n\n  /**\n   * Focus the linked element\n   *\n   * Set tabindex and helper CSS class. Set listener to remove them on blur.\n   *\n   * @private\n   */\n  focusLinkedElement () {\n    if (!this.$linkedElement.getAttribute('tabindex')) {\n      // Set the element tabindex to -1 so it can be focused with JavaScript.\n      this.$linkedElement.setAttribute('tabindex', '-1')\n      this.$linkedElement.classList.add('govuk-skip-link-focused-element')\n\n      // Add listener for blur on the focused element (unless the listener has previously been added)\n      if (!this.linkedElementListener) {\n        this.$linkedElement.addEventListener('blur', () => this.removeFocusProperties())\n        this.linkedElementListener = true\n      }\n    }\n\n    this.$linkedElement.focus()\n  }\n\n  /**\n   * Remove the tabindex that makes the linked element focusable because the element only needs to be\n   * focusable until it has received programmatic focus and a screen reader has announced it.\n   *\n   * Remove the CSS class that removes the native focus styles.\n   *\n   * @private\n   */\n  removeFocusProperties () {\n    this.$linkedElement.removeAttribute('tabindex')\n    this.$linkedElement.classList.remove('govuk-skip-link-focused-element')\n  }\n\n  /**\n   * Get fragment from URL\n   *\n   * Extract the fragment (everything after the hash symbol) from a URL, but not including\n   * the symbol.\n   *\n   * @private\n   * @returns {string | undefined} Fragment from URL, without the hash symbol\n   */\n  getFragmentFromUrl () {\n    // Bail if the anchor link doesn't have a hash\n    if (!this.$module.hash) {\n      return\n    }\n\n    return this.$module.hash.split('#').pop()\n  }\n}\n","/**\n * Tabs component\n */\nexport class Tabs {\n  /** @private */\n  $module\n\n  /** @private */\n  $tabs\n\n  /** @private */\n  keys = { left: 37, right: 39, up: 38, down: 40 }\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element} $module - HTML element to use for tabs\n   */\n  constructor ($module) {\n    if (!($module instanceof HTMLElement) || !document.body.classList.contains('govuk-frontend-supported')) {\n      return this\n    }\n\n    /** @satisfies {NodeListOf<HTMLAnchorElement>} */\n    const $tabs = $module.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      return this\n    }\n\n    this.$module = $module\n    this.$tabs = $tabs\n\n    // Save bounded functions to use when removing event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks () {\n    this.mql = window.matchMedia('(min-width: 40.0625em)')\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode () {\n    if (this.mql.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup () {\n    const $tabList = this.$module.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$module.querySelectorAll('.govuk-tabs__list-item')\n\n    if (!this.$tabs || !$tabList || !$tabListItems) {\n      return\n    }\n\n    $tabList.setAttribute('role', 'tablist')\n\n    $tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) || this.$tabs[0]\n    if (!$activeTab) {\n      return\n    }\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown () {\n    const $tabList = this.$module.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$module.querySelectorAll('a.govuk-tabs__list-item')\n\n    if (!this.$tabs || !$tabList || !$tabListItems) {\n      return\n    }\n\n    $tabList.removeAttribute('role')\n\n    $tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange () {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab ($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab ($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab (hash) {\n    return this.$module.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes ($tab) {\n    // set tab attributes\n    const panelId = this.getHref($tab).slice(1)\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes ($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick (event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry ($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id\n    // so the page doesn't jump when a user clicks a tab (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = this.getHref($tab).slice(1)\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right/down arrow for next tab\n   * - Press left/up arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown (event) {\n    switch (event.keyCode) {\n      case this.keys.left:\n      case this.keys.up:\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case this.keys.right:\n      case this.keys.down:\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab () {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab || !$currentTab.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    /** @satisfies {HTMLAnchorElement} */\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab () {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab || !$currentTab.parentElement) {\n      return\n    }\n\n    const $previousTabListItem = $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    /** @satisfies {HTMLAnchorElement} */\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel ($tab) {\n    return this.$module.querySelector(this.getHref($tab))\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel ($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel ($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab ($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab ($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab () {\n    return this.$module.querySelector('.govuk-tabs__list-item--selected a.govuk-tabs__tab')\n  }\n\n  /**\n   * Get link hash fragment for href attribute\n   *\n   * this is because IE doesn't always return the actual value but a relative full path\n   * should be a utility function most prob\n   * {@link http://labs.thesedays.com/blog/2010/01/08/getting-the-href-value-with-jquery-in-ie/}\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {string} Hash fragment including #\n   */\n  getHref ($tab) {\n    const href = $tab.getAttribute('href')\n    const hash = href.slice(href.indexOf('#'), href.length)\n    return hash\n  }\n}\n","/* eslint-disable no-new */\n\nimport { version } from './common/govuk-frontend-version.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config} [config] - Config for all components\n */\nfunction initAll (config) {\n  config = typeof config !== 'undefined' ? config : {}\n\n  // Skip initialisation when GOV.UK Frontend is not supported\n  if (!document.body.classList.contains('govuk-frontend-supported')) {\n    return\n  }\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  const $scope = config.scope instanceof HTMLElement ? config.scope : document\n\n  const $accordions = $scope.querySelectorAll('[data-module=\"govuk-accordion\"]')\n  $accordions.forEach(($accordion) => {\n    new Accordion($accordion, config.accordion)\n  })\n\n  const $buttons = $scope.querySelectorAll('[data-module=\"govuk-button\"]')\n  $buttons.forEach(($button) => {\n    new Button($button, config.button)\n  })\n\n  const $characterCounts = $scope.querySelectorAll('[data-module=\"govuk-character-count\"]')\n  $characterCounts.forEach(($characterCount) => {\n    new CharacterCount($characterCount, config.characterCount)\n  })\n\n  const $checkboxes = $scope.querySelectorAll('[data-module=\"govuk-checkboxes\"]')\n  $checkboxes.forEach(($checkbox) => {\n    new Checkboxes($checkbox)\n  })\n\n  // Find first error summary module to enhance.\n  const $errorSummary = $scope.querySelector('[data-module=\"govuk-error-summary\"]')\n  if ($errorSummary) {\n    new ErrorSummary($errorSummary, config.errorSummary)\n  }\n\n  const $exitThisPageButtons = $scope.querySelectorAll('[data-module=\"govuk-exit-this-page\"]')\n  $exitThisPageButtons.forEach(($button) => {\n    new ExitThisPage($button, config.exitThisPage)\n  })\n\n  // Find first header module to enhance.\n  const $header = $scope.querySelector('[data-module=\"govuk-header\"]')\n  if ($header) {\n    new Header($header)\n  }\n\n  const $notificationBanners = $scope.querySelectorAll('[data-module=\"govuk-notification-banner\"]')\n  $notificationBanners.forEach(($notificationBanner) => {\n    new NotificationBanner($notificationBanner, config.notificationBanner)\n  })\n\n  const $radios = $scope.querySelectorAll('[data-module=\"govuk-radios\"]')\n  $radios.forEach(($radio) => {\n    new Radios($radio)\n  })\n\n  // Find first skip link module to enhance.\n  const $skipLink = $scope.querySelector('[data-module=\"govuk-skip-link\"]')\n  if ($skipLink) {\n    new SkipLink($skipLink)\n  }\n\n  const $tabs = $scope.querySelectorAll('[data-module=\"govuk-tabs\"]')\n  $tabs.forEach(($tabs) => {\n    new Tabs($tabs)\n  })\n}\n\nexport {\n  initAll,\n  version,\n\n  // Components\n  Accordion,\n  Button,\n  CharacterCount,\n  Checkboxes,\n  ErrorSummary,\n  ExitThisPage,\n  Header,\n  NotificationBanner,\n  Radios,\n  SkipLink,\n  Tabs\n}\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {Element} [scope=document] - Scope to query for components\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n */\n\n/**\n * Config for individual components\n *\n * @typedef {import('./components/accordion/accordion.mjs').AccordionConfig} AccordionConfig\n * @typedef {import('./components/accordion/accordion.mjs').AccordionTranslations} AccordionTranslations\n * @typedef {import('./components/button/button.mjs').ButtonConfig} ButtonConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountConfig} CharacterCountConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountConfigWithMaxLength} CharacterCountConfigWithMaxLength\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountConfigWithMaxWords} CharacterCountConfigWithMaxWords\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountTranslations} CharacterCountTranslations\n * @typedef {import('./components/error-summary/error-summary.mjs').ErrorSummaryConfig} ErrorSummaryConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageConfig} ExitThisPageConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageTranslations} ExitThisPageTranslations\n * @typedef {import('./components/notification-banner/notification-banner.mjs').NotificationBannerConfig} NotificationBannerConfig\n */\n"],"names":["version","mergeConfigs","flattenObject","configObject","flattenedObject","flattenLoop","obj","prefix","key","Object","prototype","hasOwnProperty","call","value","prefixedKey","formattedConfigObject","i","arguments","length","extractConfigByNamespace","namespace","Error","newObject","keyParts","split","shift","newKey","join","normaliseString","trimmedValue","trim","isFinite","Number","normaliseDataset","dataset","out","I18n","constructor","translations","config","locale","document","documentElement","lang","t","lookupKey","options","count","getPluralSuffix","translationString","match","replacePlaceholders","formatter","hasIntlNumberFormatSupport","Intl","NumberFormat","replace","placeholderWithBraces","placeholderKey","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","window","PluralRules","supportedLocalesOf","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","languages","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","n","lastTwo","last","Accordion","$module","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","browserSupportsSessionStorage","$showAllButton","$showAllIcon","$showAllText","HTMLElement","body","classList","contains","defaults","querySelectorAll","helper","checkForSessionStorage","initControls","initSectionHeaders","areAllSectionsOpen","checkIfAllSectionsOpen","updateShowAllButton","createElement","setAttribute","add","appendChild","$accordionControls","insertBefore","firstChild","addEventListener","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","index","$span","$heading","$summary","$button","id","attributes","attr","item","nodeName","nodeValue","$headingText","$headingTextFocus","innerHTML","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","j","l","parentNode","replaceChild","removeChild","$fragment","target","Element","closest","expanded","storeState","nowExpanded","$content","newButtonText","innerText","ariaLabelParts","push","ariaLabelMessage","removeAttribute","remove","sectionsCount","expandedSectionCount","toString","rememberExpanded","contentId","getAttribute","contentState","sessionStorage","setItem","getItem","$punctuationEl","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","testString","result","removeItem","exception","KEY_SPACE","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","debounceFormSubmitTimer","handleKeyDown","debounce","$target","keyCode","preventDefault","click","preventDoubleClick","setTimeout","closestAttributeValue","$element","attributeName","$closestElementWithAttribute","CharacterCount","$textarea","$visibleCountMessage","$screenReaderCountMessage","lastInputTimestamp","lastInputValue","valueChecker","maxLength","Infinity","HTMLTextAreaElement","HTMLInputElement","datasetConfig","configOverrides","maxlength","undefined","maxwords","$textareaDescription","getElementById","insertAdjacentElement","className","bindChangeEvents","updateCountMessage","handleKeyUp","handleFocus","handleBlur","updateVisibleCountMessage","Date","now","setInterval","updateIfValueChanged","clearInterval","updateScreenReaderCountMessage","remainingNumber","isOverThreshold","getCountMessage","text","tokens","countType","formatCountMessage","translationKeySuffix","threshold","currentLength","thresholdValue","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","Checkboxes","$inputs","$input","targetId","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","inputIsChecked","checked","toggle","unCheckAllInputsExcept","allInputsWithSameName","name","$inputWithSameName","hasSameFormOwner","form","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","type","hasAriaControls","hasBehaviourExclusive","ErrorSummary","setFocus","disableAutoFocus","focus","focusTarget","HTMLAnchorElement","inputId","getFragmentFromUrl","href","$legendOrLabel","getAssociatedLegendOrLabel","scrollIntoView","preventScroll","url","indexOf","pop","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","inputBottom","ExitThisPage","$skiplinkButton","$updateSpan","$indicatorContainer","$overlay","keypressCounter","lastKeyWasModified","timeoutTime","keypressTimeoutId","timeoutMessageId","buildIndicator","initUpdateSpan","initButtonClickHandler","handleKeypress","bind","govukFrontendExitThisPageKeypress","resetPage","$indicator","updateIndicator","$indicators","exitPage","location","which","clearTimeout","setKeypressTimer","resetKeypressTimer","shiftKey","activated","timedOut","pressTwoMoreTimes","pressOneMoreTime","Header","$menuButton","$menu","menuIsOpen","mql","matchMedia","syncState","addListener","handleMenuButtonClick","matches","NotificationBanner","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameName","SkipLink","$linkedElement","linkedElementListener","getLinkedElement","focusLinkedElement","linkedElementId","removeFocusProperties","hash","Tabs","$tabs","keys","left","right","up","down","jsHiddenClass","changingHash","boundTabClick","boundTabKeydown","boundOnHashChange","onTabClick","onTabKeydown","onHashChange","setupResponsiveChecks","checkMode","setup","teardown","$tabList","$tabListItems","$item","$tab","setAttributes","hideTab","$activeTab","getTab","showTab","removeEventListener","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","getHref","slice","$panel","getPanel","$currentTab","$nextTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","parentElement","$nextTabListItem","nextElementSibling","$previousTabListItem","previousElementSibling","initAll","$scope","scope","$accordions","$accordion","accordion","$buttons","button","$characterCounts","$characterCount","characterCount","$checkboxes","$checkbox","$errorSummary","errorSummary","$exitThisPageButtons","exitThisPage","$notificationBanners","$notificationBanner","notificationBanner","$radios","$radio","$skipLink"],"mappings":"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BAAoB,GAAGP,eAAe,GAAG,CAAC,GAAG,WAAW,GAAG,YAAY,CAAA;IAE7E,OAAO,IAAI,CAACzK,IAAI,CAACnD,CAAC,CAAE,CAAA,EAAEiO,SAAU,CAAA,EAAEE,oBAAqB,CAAA,CAAC,EAAE;AAAEhO,MAAAA,KAAK,EAAEwB,IAAI,CAACC,GAAG,CAACgM,eAAe,CAAA;AAAE,KAAC,CAAC,CAAA;AACjG,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAeA,GAAI;AACjB;AACA,IAAA,IAAI,CAAC,IAAI,CAAClO,MAAM,CAACyO,SAAS,EAAE;AAC1B,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;;AAEA;IACA,MAAMC,aAAa,GAAG,IAAI,CAAClO,KAAK,CAAC,IAAI,CAAC0L,SAAS,CAAC5N,KAAK,CAAC,CAAA;AACtD,IAAA,MAAMkO,SAAS,GAAG,IAAI,CAACA,SAAS,CAAA;IAEhC,MAAMmC,cAAc,GAAGnC,SAAS,GAAG,IAAI,CAACxM,MAAM,CAACyO,SAAS,GAAG,GAAG,CAAA;IAE9D,OAAQE,cAAc,IAAID,aAAa,CAAA;AACzC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AA6BA,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AA7eazC,cAAc,CA6XlB5G,QAAQ,GAAGnH,MAAM,CAACoM,MAAM,CAAC;AAC9BmE,EAAAA,SAAS,EAAE,CAAC;AACZjL,EAAAA,IAAI,EAAE;AACJ;AACAoL,IAAAA,oBAAoB,EAAE;AACpBC,MAAAA,GAAG,EAAE,uCAAuC;AAC5CC,MAAAA,KAAK,EAAE,wCAAA;KACR;AACDC,IAAAA,iBAAiB,EAAE,iCAAiC;AACpDC,IAAAA,mBAAmB,EAAE;AACnBH,MAAAA,GAAG,EAAE,sCAAsC;AAC3CC,MAAAA,KAAK,EAAE,uCAAA;KACR;AACD;AACAG,IAAAA,eAAe,EAAE;AACfJ,MAAAA,GAAG,EAAE,kCAAkC;AACvCC,MAAAA,KAAK,EAAE,mCAAA;KACR;AACDI,IAAAA,YAAY,EAAE,4BAA4B;AAC1CC,IAAAA,cAAc,EAAE;AACdN,MAAAA,GAAG,EAAE,iCAAiC;AACtCC,MAAAA,KAAK,EAAE,kCAAA;KACR;AACDM,IAAAA,mBAAmB,EAAE;AACnBN,MAAAA,KAAK,EAAE,EAAA;AACT,KAAA;AACF,GAAA;AACF,CAAC,CAAC;;ACvaJ;AACA;AACA;AACO,MAAMO,UAAU,CAAC;AAOtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEvP,WAAWA,CAAEyD,OAAO,EAAE;AApBtB;AAAA,IAAA,IAAA,CACAA,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AAAA,IAAA,IAAA,CACA+L,OAAO,GAAA,KAAA,CAAA,CAAA;AAiBL,IAAA,IAAI,EAAE/L,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;;AAEA;AACA,IAAA,MAAMkK,OAAO,GAAG/L,OAAO,CAAC+B,gBAAgB,CAAC,wBAAwB,CAAC,CAAA;AAClE,IAAA,IAAI,CAACgK,OAAO,CAAC3Q,MAAM,EAAE;AACnB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC4E,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAAC+L,OAAO,GAAGA,OAAO,CAAA;AAEtB,IAAA,IAAI,CAACA,OAAO,CAAC7I,OAAO,CAAE8I,MAAM,IAAK;AAC/B,MAAA,MAAMC,QAAQ,GAAGD,MAAM,CAACvF,YAAY,CAAC,oBAAoB,CAAC,CAAA;;AAE1D;AACA;MACA,IAAI,CAACwF,QAAQ,IAAI,CAACtP,QAAQ,CAACgN,cAAc,CAACsC,QAAQ,CAAC,EAAE;AACnD,QAAA,OAAA;AACF,OAAA;;AAEA;AACA;AACAD,MAAAA,MAAM,CAACxJ,YAAY,CAAC,eAAe,EAAEyJ,QAAQ,CAAC,CAAA;AAC9CD,MAAAA,MAAM,CAAC9F,eAAe,CAAC,oBAAoB,CAAC,CAAA;AAC9C,KAAC,CAAC,CAAA;;AAEF;AACA;AACA;IACAjI,MAAM,CAAC6E,gBAAgB,CAAC,UAAU,EAAE,MAAM,IAAI,CAACoJ,yBAAyB,EAAE,CAAC,CAAA;;AAE3E;AACA;AACA;IACA,IAAI,CAACA,yBAAyB,EAAE,CAAA;;AAEhC;AACA,IAAA,IAAI,CAAClM,OAAO,CAAC8C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACmJ,WAAW,CAACnJ,KAAK,CAAC,CAAC,CAAA;AAC5E,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEkJ,EAAAA,yBAAyBA,GAAI;AAC3B,IAAA,IAAI,CAACH,OAAO,CAAC7I,OAAO,CAAE8I,MAAM,IAAK,IAAI,CAACI,mCAAmC,CAACJ,MAAM,CAAC,CAAC,CAAA;AACpF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,mCAAmCA,CAAEJ,MAAM,EAAE;AAC3C,IAAA,MAAMC,QAAQ,GAAGD,MAAM,CAACvF,YAAY,CAAC,eAAe,CAAC,CAAA;IACrD,IAAI,CAACwF,QAAQ,EAAE;AACb,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,MAAMjE,OAAO,GAAGrL,QAAQ,CAACgN,cAAc,CAACsC,QAAQ,CAAC,CAAA;IACjD,IAAIjE,OAAO,IAAIA,OAAO,CAACpG,SAAS,CAACC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;AAC1E,MAAA,MAAMwK,cAAc,GAAGL,MAAM,CAACM,OAAO,CAAA;MAErCN,MAAM,CAACxJ,YAAY,CAAC,eAAe,EAAE6J,cAAc,CAAC/F,QAAQ,EAAE,CAAC,CAAA;MAC/D0B,OAAO,CAACpG,SAAS,CAAC2K,MAAM,CAAC,uCAAuC,EAAE,CAACF,cAAc,CAAC,CAAA;AACpF,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,sBAAsBA,CAAER,MAAM,EAAE;AAC9B;IACA,MAAMS,qBAAqB,GAAG9P,QAAQ,CAACoF,gBAAgB,CACpD,CAAA,6BAAA,EAA+BiK,MAAM,CAACU,IAAK,CAAA,EAAA,CAC9C,CAAC,CAAA;AAEDD,IAAAA,qBAAqB,CAACvJ,OAAO,CAAEyJ,kBAAkB,IAAK;MACpD,MAAMC,gBAAgB,GAAIZ,MAAM,CAACa,IAAI,KAAKF,kBAAkB,CAACE,IAAK,CAAA;AAClE,MAAA,IAAID,gBAAgB,IAAID,kBAAkB,KAAKX,MAAM,EAAE;QACrDW,kBAAkB,CAACL,OAAO,GAAG,KAAK,CAAA;AAClC,QAAA,IAAI,CAACF,mCAAmC,CAACO,kBAAkB,CAAC,CAAA;AAC9D,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,sBAAsBA,CAAEd,MAAM,EAAE;AAC9B;IACA,MAAMe,0CAA0C,GAAGpQ,QAAQ,CAACoF,gBAAgB,CACzE,CAAA,yDAAA,EAA2DiK,MAAM,CAACU,IAAK,CAAA,EAAA,CAC1E,CAAC,CAAA;AAEDK,IAAAA,0CAA0C,CAAC7J,OAAO,CAAE8J,eAAe,IAAK;MACtE,MAAMJ,gBAAgB,GAAIZ,MAAM,CAACa,IAAI,KAAKG,eAAe,CAACH,IAAK,CAAA;AAC/D,MAAA,IAAID,gBAAgB,EAAE;QACpBI,eAAe,CAACV,OAAO,GAAG,KAAK,CAAA;AAC/B,QAAA,IAAI,CAACF,mCAAmC,CAACY,eAAe,CAAC,CAAA;AAC3D,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEb,WAAWA,CAAEnJ,KAAK,EAAE;AAClB,IAAA,MAAMiK,aAAa,GAAGjK,KAAK,CAACsC,MAAM,CAAA;;AAElC;IACA,IAAI,EAAE2H,aAAa,YAAY7D,gBAAgB,CAAC,IAAI6D,aAAa,CAACC,IAAI,KAAK,UAAU,EAAE;AACrF,MAAA,OAAA;AACF,KAAA;;AAEA;AACA,IAAA,MAAMC,eAAe,GAAGF,aAAa,CAACxG,YAAY,CAAC,eAAe,CAAC,CAAA;AACnE,IAAA,IAAI0G,eAAe,EAAE;AACnB,MAAA,IAAI,CAACf,mCAAmC,CAACa,aAAa,CAAC,CAAA;AACzD,KAAA;;AAEA;AACA,IAAA,IAAI,CAACA,aAAa,CAACX,OAAO,EAAE;AAC1B,MAAA,OAAA;AACF,KAAA;;AAEA;IACA,MAAMc,qBAAqB,GAAIH,aAAa,CAACxG,YAAY,CAAC,gBAAgB,CAAC,KAAK,WAAY,CAAA;AAC5F,IAAA,IAAI2G,qBAAqB,EAAE;AACzB,MAAA,IAAI,CAACZ,sBAAsB,CAACS,aAAa,CAAC,CAAA;AAC5C,KAAC,MAAM;AACL,MAAA,IAAI,CAACH,sBAAsB,CAACG,aAAa,CAAC,CAAA;AAC5C,KAAA;AACF,GAAA;AACF;;ACtLA;AACA;AACA;AACA;AACA;AACO,MAAMI,YAAY,CAAC;AAUxB;AACF;AACA;AACA;AACA;AACE9Q,EAAAA,WAAWA,CAAEyD,OAAO,EAAEvD,MAAM,EAAE;AAd9B;AAAA,IAAA,IAAA,CACAuD,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AACF;AACA;AACA;AAHE,IAAA,IAAA,CAIAvD,MAAM,GAAA,KAAA,CAAA,CAAA;AAQJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,IAAI,EAAEuD,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC7B,OAAO,GAAGA,OAAO,CAAA;IAEtB,IAAI,CAACvD,MAAM,GAAGtC,YAAY,CACxBkT,YAAY,CAACvL,QAAQ,EACrBrF,MAAM,IAAI,EAAE,EACZN,gBAAgB,CAAC6D,OAAO,CAAC5D,OAAO,CAClC,CAAC,CAAA;IAED,IAAI,CAACkR,QAAQ,EAAE,CAAA;AACf,IAAA,IAAI,CAACtN,OAAO,CAAC8C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACmJ,WAAW,CAACnJ,KAAK,CAAC,CAAC,CAAA;AAC5E,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEsK,EAAAA,QAAQA,GAAI;AACV,IAAA,IAAI,IAAI,CAAC7Q,MAAM,CAAC8Q,gBAAgB,EAAE;AAChC,MAAA,OAAA;AACF,KAAA;;AAEA;AACA;IACA,IAAI,CAACvN,OAAO,CAACwC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;AAE3C,IAAA,IAAI,CAACxC,OAAO,CAAC8C,gBAAgB,CAAC,MAAM,EAAE,MAAM;AAC1C,MAAA,IAAI,CAAC9C,OAAO,CAACkG,eAAe,CAAC,UAAU,CAAC,CAAA;AAC1C,KAAC,CAAC,CAAA;AAEF,IAAA,IAAI,CAAClG,OAAO,CAACwN,KAAK,EAAE,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACErB,WAAWA,CAAEnJ,KAAK,EAAE;AAClB,IAAA,MAAMgF,OAAO,GAAGhF,KAAK,CAACsC,MAAM,CAAA;AAC5B,IAAA,IAAI,IAAI,CAACmI,WAAW,CAACzF,OAAO,CAAC,EAAE;MAC7BhF,KAAK,CAACkF,cAAc,EAAE,CAAA;AACxB,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuF,WAAWA,CAAEzF,OAAO,EAAE;AACpB;AACA,IAAA,IAAI,EAAEA,OAAO,YAAY0F,iBAAiB,CAAC,EAAE;AAC3C,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;IAEA,MAAMC,OAAO,GAAG,IAAI,CAACC,kBAAkB,CAAC5F,OAAO,CAAC6F,IAAI,CAAC,CAAA;IACrD,IAAI,CAACF,OAAO,EAAE;AACZ,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,MAAM3B,MAAM,GAAGrP,QAAQ,CAACgN,cAAc,CAACgE,OAAO,CAAC,CAAA;IAC/C,IAAI,CAAC3B,MAAM,EAAE;AACX,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,MAAM8B,cAAc,GAAG,IAAI,CAACC,0BAA0B,CAAC/B,MAAM,CAAC,CAAA;IAC9D,IAAI,CAAC8B,cAAc,EAAE;AACnB,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;;AAEA;AACA;AACA;IACAA,cAAc,CAACE,cAAc,EAAE,CAAA;IAC/BhC,MAAM,CAACwB,KAAK,CAAC;AAAES,MAAAA,aAAa,EAAE,IAAA;AAAK,KAAC,CAAC,CAAA;AAErC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEL,kBAAkBA,CAAEM,GAAG,EAAE;IACvB,IAAIA,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC3B,MAAA,OAAO3E,SAAS,CAAA;AAClB,KAAA;IAEA,OAAO0E,GAAG,CAACxS,KAAK,CAAC,GAAG,CAAC,CAAC0S,GAAG,EAAE,CAAA;AAC7B,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEL,0BAA0BA,CAAE/B,MAAM,EAAE;AAClC,IAAA,MAAMqC,SAAS,GAAGrC,MAAM,CAACxG,OAAO,CAAC,UAAU,CAAC,CAAA;AAE5C,IAAA,IAAI6I,SAAS,EAAE;AACb,MAAA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,oBAAoB,CAAC,QAAQ,CAAC,CAAA;MAEzD,IAAID,QAAQ,CAAClT,MAAM,EAAE;AACnB,QAAA,MAAMoT,gBAAgB,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAA;;AAEpC;AACA;AACA,QAAA,IAAItC,MAAM,YAAY5C,gBAAgB,KAAK4C,MAAM,CAACkB,IAAI,KAAK,UAAU,IAAIlB,MAAM,CAACkB,IAAI,KAAK,OAAO,CAAC,EAAE;AACjG,UAAA,OAAOsB,gBAAgB,CAAA;AACzB,SAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;QACA,MAAMC,SAAS,GAAGD,gBAAgB,CAACE,qBAAqB,EAAE,CAACC,GAAG,CAAA;AAC9D,QAAA,MAAMC,SAAS,GAAG5C,MAAM,CAAC0C,qBAAqB,EAAE,CAAA;;AAEhD;AACA;AACA,QAAA,IAAIE,SAAS,CAACC,MAAM,IAAI5Q,MAAM,CAAC6Q,WAAW,EAAE;UAC1C,MAAMC,WAAW,GAAGH,SAAS,CAACD,GAAG,GAAGC,SAAS,CAACC,MAAM,CAAA;UAEpD,IAAIE,WAAW,GAAGN,SAAS,GAAGxQ,MAAM,CAAC6Q,WAAW,GAAG,CAAC,EAAE;AACpD,YAAA,OAAON,gBAAgB,CAAA;AACzB,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;AAEA,IAAA,OAAO7R,QAAQ,CAAC0G,aAAa,CAAE,CAAa2I,WAAAA,EAAAA,MAAM,CAACvF,YAAY,CAAC,IAAI,CAAE,CAAA,EAAA,CAAG,CAAC,IACxEuF,MAAM,CAACxG,OAAO,CAAC,OAAO,CAAC,CAAA;AAC3B,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAvNa6H,YAAY,CA4MhBvL,QAAQ,GAAGnH,MAAM,CAACoM,MAAM,CAAC;AAC9BwG,EAAAA,gBAAgB,EAAE,KAAA;AACpB,CAAC,CAAC;;AClNJ;AACA;AACA;AACO,MAAMyB,YAAY,CAAC;AAiExB;AACF;AACA;AACA;AACEzS,EAAAA,WAAWA,CAAEyD,OAAO,EAAEvD,MAAM,EAAE;AApE9B;AAAA,IAAA,IAAA,CACAuD,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AACF;AACA;AACA;AAHE,IAAA,IAAA,CAIAvD,MAAM,GAAA,KAAA,CAAA,CAAA;AAEN;AAAA,IAAA,IAAA,CACAwD,IAAI,GAAA,KAAA,CAAA,CAAA;AAEJ;AAAA,IAAA,IAAA,CACA8D,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AACF;AACA;AACA;IAHE,IAIAkL,CAAAA,eAAe,GAAG,IAAI,CAAA;AAEtB;AACF;AACA;AACA;IAHE,IAIAC,CAAAA,WAAW,GAAG,IAAI,CAAA;AAElB;AACF;AACA;AACA;IAHE,IAIAC,CAAAA,mBAAmB,GAAG,IAAI,CAAA;AAE1B;AACF;AACA;AACA;IAHE,IAIAC,CAAAA,QAAQ,GAAG,IAAI,CAAA;AAEf;IAAA,IACAC,CAAAA,eAAe,GAAG,CAAC,CAAA;AAEnB;IAAA,IACAC,CAAAA,kBAAkB,GAAG,KAAK,CAAA;AAE1B;IAAA,IACAC,CAAAA,WAAW,GAAG,IAAI,CAAA;AAAC;AAEnB;AACA;AACA;AAEA;AACF;AACA;AACA;IAHE,IAIAC,CAAAA,iBAAiB,GAAG,IAAI,CAAA;AAExB;AACF;AACA;AACA;IAHE,IAIAC,CAAAA,gBAAgB,GAAG,IAAI,CAAA;AAOrB,IAAA,IAAI,EAAEzP,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,MAAMkC,OAAO,GAAG/D,OAAO,CAACqD,aAAa,CAAC,+BAA+B,CAAC,CAAA;AACtE,IAAA,IAAI,EAAEU,OAAO,YAAYrC,WAAW,CAAC,EAAE;AACrC,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAACjF,MAAM,GAAGtC,YAAY,CACxB6U,YAAY,CAAClN,QAAQ,EACrBrF,MAAM,IAAI,EAAE,EACZN,gBAAgB,CAAC6D,OAAO,CAAC5D,OAAO,CAClC,CAAC,CAAA;AAED,IAAA,IAAI,CAAC6D,IAAI,GAAG,IAAI3D,IAAI,CAACjB,wBAAwB,CAAC,IAAI,CAACoB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IACnE,IAAI,CAACuD,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAAC+D,OAAO,GAAGA,OAAO,CAAA;AAEtB,IAAA,MAAMkL,eAAe,GAAGtS,QAAQ,CAAC0G,aAAa,CAAC,mCAAmC,CAAC,CAAA;IACnF,IAAI4L,eAAe,YAAYvB,iBAAiB,EAAE;MAChD,IAAI,CAACuB,eAAe,GAAGA,eAAe,CAAA;AACxC,KAAA;IAEA,IAAI,CAACS,cAAc,EAAE,CAAA;IACrB,IAAI,CAACC,cAAc,EAAE,CAAA;IACrB,IAAI,CAACC,sBAAsB,EAAE,CAAA;;AAE7B;IACA,IAAI,EAAE,mCAAmC,IAAIjT,QAAQ,CAACgF,IAAI,CAACvF,OAAO,CAAC,EAAE;AACnEO,MAAAA,QAAQ,CAACmG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC+M,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAA;AACxEnT,MAAAA,QAAQ,CAACgF,IAAI,CAACvF,OAAO,CAAC2T,iCAAiC,GAAG,MAAM,CAAA;AAClE,KAAA;;AAEA;AACA;AACA;AACA9R,IAAAA,MAAM,CAAC6E,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACkN,SAAS,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAChE,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEH,EAAAA,cAAcA,GAAI;IAChB,IAAI,CAACT,WAAW,GAAGvS,QAAQ,CAAC4F,aAAa,CAAC,MAAM,CAAC,CAAA;IACjD,IAAI,CAAC2M,WAAW,CAAC1M,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAC/C,IAAA,IAAI,CAAC0M,WAAW,CAACrF,SAAS,GAAG,uBAAuB,CAAA;IAEpD,IAAI,CAAC7J,OAAO,CAAC0C,WAAW,CAAC,IAAI,CAACwM,WAAW,CAAC,CAAA;AAC5C,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEU,EAAAA,sBAAsBA,GAAI;AACxB;AACA,IAAA,IAAI,CAAC7L,OAAO,CAACjB,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACqJ,WAAW,CAAC2D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;;AAEnE;IACA,IAAI,IAAI,CAACb,eAAe,EAAE;AACxB,MAAA,IAAI,CAACA,eAAe,CAACnM,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACqJ,WAAW,CAAC2D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAC7E,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEJ,EAAAA,cAAcA,GAAI;AAChB;AACA;IACA,IAAI,CAACP,mBAAmB,GAAGxS,QAAQ,CAAC4F,aAAa,CAAC,KAAK,CAAC,CAAA;AACxD,IAAA,IAAI,CAAC4M,mBAAmB,CAACtF,SAAS,GAAG,iCAAiC,CAAA;IACtE,IAAI,CAACsF,mBAAmB,CAAC3M,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAA;;AAE5D;IACA,KAAK,IAAItH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;AAC1B,MAAA,MAAM+U,UAAU,GAAGtT,QAAQ,CAAC4F,aAAa,CAAC,KAAK,CAAC,CAAA;MAChD0N,UAAU,CAACpG,SAAS,GAAG,uCAAuC,CAAA;AAC9D,MAAA,IAAI,CAACsF,mBAAmB,CAACzM,WAAW,CAACuN,UAAU,CAAC,CAAA;AAClD,KAAA;;AAEA;IACA,IAAI,CAAClM,OAAO,CAACrB,WAAW,CAAC,IAAI,CAACyM,mBAAmB,CAAC,CAAA;AACpD,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEe,EAAAA,eAAeA,GAAI;AACjB;AACA,IAAA,IAAI,IAAI,CAACb,eAAe,GAAG,CAAC,EAAE;MAC5B,IAAI,CAACF,mBAAmB,CAACvN,SAAS,CAACa,GAAG,CAAC,0CAA0C,CAAC,CAAA;AACpF,KAAC,MAAM;MACL,IAAI,CAAC0M,mBAAmB,CAACvN,SAAS,CAACuE,MAAM,CAAC,0CAA0C,CAAC,CAAA;AACvF,KAAA;;AAEA;IACA,MAAMgK,WAAW,GAAG,IAAI,CAAChB,mBAAmB,CAACpN,gBAAgB,CAC3D,wCACF,CAAC,CAAA;AACDoO,IAAAA,WAAW,CAACjN,OAAO,CAAC,CAAC+M,UAAU,EAAEtM,KAAK,KAAK;AACzCsM,MAAAA,UAAU,CAACrO,SAAS,CAAC2K,MAAM,CACzB,2CAA2C,EAC3C5I,KAAK,GAAG,IAAI,CAAC0L,eACf,CAAC,CAAA;AACH,KAAC,CAAC,CAAA;AACJ,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEe,EAAAA,QAAQA,GAAI;AACV,IAAA,IAAI,CAAClB,WAAW,CAACpJ,SAAS,GAAG,EAAE,CAAA;;AAE/B;AACA;AACA;AACA;IACAnJ,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACa,GAAG,CAAC,mCAAmC,CAAC,CAAA;IAChE,IAAI,CAAC2M,QAAQ,GAAGzS,QAAQ,CAAC4F,aAAa,CAAC,KAAK,CAAC,CAAA;AAC7C,IAAA,IAAI,CAAC6M,QAAQ,CAACvF,SAAS,GAAG,8BAA8B,CAAA;IACxD,IAAI,CAACuF,QAAQ,CAAC5M,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;;AAE3C;AACA;AACA;IACA7F,QAAQ,CAACgF,IAAI,CAACe,WAAW,CAAC,IAAI,CAAC0M,QAAQ,CAAC,CAAA;AACxC,IAAA,IAAI,CAACA,QAAQ,CAACtJ,SAAS,GAAG,IAAI,CAAC7F,IAAI,CAACnD,CAAC,CAAC,WAAW,CAAC,CAAA;AAElDmB,IAAAA,MAAM,CAACoS,QAAQ,CAACxC,IAAI,GAAG,IAAI,CAAC9J,OAAO,CAAC0C,YAAY,CAAC,MAAM,CAAC,CAAA;AAC1D,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE0F,WAAWA,CAAEnJ,KAAK,EAAE;IAClBA,KAAK,CAACkF,cAAc,EAAE,CAAA;IACtB,IAAI,CAACkI,QAAQ,EAAE,CAAA;AACjB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEP,cAAcA,CAAE7M,KAAK,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,IACE,CAACA,KAAK,CAACtI,GAAG,KAAK,OAAO,IAAIsI,KAAK,CAACiF,OAAO,KAAK,EAAE,IAAIjF,KAAK,CAACsN,KAAK,KAAK,EAAE,KACpE,CAAC,IAAI,CAAChB,kBAAkB,EACxB;MACA,IAAI,CAACD,eAAe,IAAI,CAAC,CAAA;;AAEzB;MACA,IAAI,CAACa,eAAe,EAAE,CAAA;;AAEtB;AACA,MAAA,IAAI,IAAI,CAACT,gBAAgB,KAAK,IAAI,EAAE;AAClCxR,QAAAA,MAAM,CAACsS,YAAY,CAAC,IAAI,CAACd,gBAAgB,CAAC,CAAA;QAC1C,IAAI,CAACA,gBAAgB,GAAG,IAAI,CAAA;AAC9B,OAAA;AAEA,MAAA,IAAI,IAAI,CAACJ,eAAe,IAAI,CAAC,EAAE;QAC7B,IAAI,CAACA,eAAe,GAAG,CAAC,CAAA;AAExB,QAAA,IAAI,IAAI,CAACG,iBAAiB,KAAK,IAAI,EAAE;AACnCvR,UAAAA,MAAM,CAACsS,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;UAC3C,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAA;AAC/B,SAAA;QAEA,IAAI,CAACY,QAAQ,EAAE,CAAA;AACjB,OAAC,MAAM;AACL,QAAA,IAAI,IAAI,CAACf,eAAe,KAAK,CAAC,EAAE;AAC9B,UAAA,IAAI,CAACH,WAAW,CAACpJ,SAAS,GAAG,IAAI,CAAC7F,IAAI,CAACnD,CAAC,CAAC,mBAAmB,CAAC,CAAA;AAC/D,SAAC,MAAM;AACL,UAAA,IAAI,CAACoS,WAAW,CAACpJ,SAAS,GAAG,IAAI,CAAC7F,IAAI,CAACnD,CAAC,CAAC,kBAAkB,CAAC,CAAA;AAC9D,SAAA;AACF,OAAA;MAEA,IAAI,CAAC0T,gBAAgB,EAAE,CAAA;AACzB,KAAC,MAAM,IAAI,IAAI,CAAChB,iBAAiB,KAAK,IAAI,EAAE;AAC1C;AACA;MACA,IAAI,CAACiB,kBAAkB,EAAE,CAAA;AAC3B,KAAA;;AAEA;AACA,IAAA,IAAI,CAACnB,kBAAkB,GAAGtM,KAAK,CAAC0N,QAAQ,CAAA;AAC1C,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,EAAAA,gBAAgBA,GAAI;AAClB;AACA;AACAvS,IAAAA,MAAM,CAACsS,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;;AAE3C;AACA,IAAA,IAAI,CAACA,iBAAiB,GAAGvR,MAAM,CAACoK,UAAU,CACxC,IAAI,CAACoI,kBAAkB,CAACX,IAAI,CAAC,IAAI,CAAC,EAClC,IAAI,CAACP,WACP,CAAC,CAAA;AACH,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEkB,EAAAA,kBAAkBA,GAAI;AACpBxS,IAAAA,MAAM,CAACsS,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;IAC3C,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAA;IAE7B,IAAI,CAACH,eAAe,GAAG,CAAC,CAAA;AACxB,IAAA,IAAI,CAACH,WAAW,CAACpJ,SAAS,GAAG,IAAI,CAAC7F,IAAI,CAACnD,CAAC,CAAC,UAAU,CAAC,CAAA;AAEpD,IAAA,IAAI,CAAC2S,gBAAgB,GAAGxR,MAAM,CAACoK,UAAU,CAAC,MAAM;AAC9C,MAAA,IAAI,CAAC6G,WAAW,CAACpJ,SAAS,GAAG,EAAE,CAAA;AACjC,KAAC,EAAE,IAAI,CAACyJ,WAAW,CAAC,CAAA;IAEpB,IAAI,CAACW,eAAe,EAAE,CAAA;AACxB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,EAAAA,SAASA,GAAI;AACX;IACArT,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACuE,MAAM,CAAC,mCAAmC,CAAC,CAAA;IAEnE,IAAI,IAAI,CAACiJ,QAAQ,EAAE;AACjB,MAAA,IAAI,CAACA,QAAQ,CAACjJ,MAAM,EAAE,CAAA;MACtB,IAAI,CAACiJ,QAAQ,GAAG,IAAI,CAAA;AACtB,KAAA;;AAEA;IACA,IAAI,CAACF,WAAW,CAAC1M,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAC/C,IAAA,IAAI,CAAC0M,WAAW,CAACpJ,SAAS,GAAG,EAAE,CAAA;;AAE/B;IACA,IAAI,CAACoK,eAAe,EAAE,CAAA;;AAEtB;IACA,IAAI,IAAI,CAACV,iBAAiB,EAAE;AAC1BvR,MAAAA,MAAM,CAACsS,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;AAC7C,KAAA;IAEA,IAAI,IAAI,CAACC,gBAAgB,EAAE;AACzBxR,MAAAA,MAAM,CAACsS,YAAY,CAAC,IAAI,CAACd,gBAAgB,CAAC,CAAA;AAC5C,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AASA,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9ZaT,YAAY,CA4XhBlN,QAAQ,GAAGnH,MAAM,CAACoM,MAAM,CAAC;AAC9B9G,EAAAA,IAAI,EAAE;AACJ0Q,IAAAA,SAAS,EAAE,UAAU;AACrBC,IAAAA,QAAQ,EAAE,yBAAyB;AACnCC,IAAAA,iBAAiB,EAAE,oCAAoC;AACvDC,IAAAA,gBAAgB,EAAE,mCAAA;AACpB,GAAA;AACF,CAAC,CAAC;;AC1YJ;AACA;AACA;AACO,MAAMC,MAAM,CAAC;AA6BlB;AACF;AACA;AACA;AACA;AACA;EACExU,WAAWA,CAAEyD,OAAO,EAAE;AAlCtB;AAAA,IAAA,IAAA,CACAA,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AAAA,IAAA,IAAA,CACAgR,WAAW,GAAA,KAAA,CAAA,CAAA;AAEX;AAAA,IAAA,IAAA,CACAC,KAAK,GAAA,KAAA,CAAA,CAAA;AAEL;AACF;AACA;AACA;AACA;AACA;AACA;IANE,IAOAC,CAAAA,UAAU,GAAG,KAAK,CAAA;AAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IAPE,IAQAC,CAAAA,GAAG,GAAG,IAAI,CAAA;AASR,IAAA,IAAI,EAAEnR,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC7B,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAACgR,WAAW,GAAGhR,OAAO,CAACqD,aAAa,CAAC,yBAAyB,CAAC,CAAA;IACnE,IAAI,CAAC4N,KAAK,GAAG,IAAI,CAACD,WAAW,IAAIhR,OAAO,CAACqD,aAAa,CACnD,CAAG,CAAA,EAAA,IAAI,CAAC2N,WAAW,CAACvK,YAAY,CAAC,eAAe,CAAE,CAAA,CACrD,CAAC,CAAA;AAED,IAAA,IACE,EACE,IAAI,CAACuK,WAAW,YAAYtP,WAAW,IACvC,IAAI,CAACuP,KAAK,YAAYvP,WAAW,CAClC,EACD;AACA,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;;AAEA;IACA,IAAI,CAACyP,GAAG,GAAGlT,MAAM,CAACmT,UAAU,CAAC,wBAAwB,CAAC,CAAA;;AAEtD;AACA;AACA,IAAA,IAAI,kBAAkB,IAAI,IAAI,CAACD,GAAG,EAAE;AAClC,MAAA,IAAI,CAACA,GAAG,CAACrO,gBAAgB,CAAC,QAAQ,EAAE,MAAM,IAAI,CAACuO,SAAS,EAAE,CAAC,CAAA;AAC7D,KAAC,MAAM;AACL;AACA;MACA,IAAI,CAACF,GAAG,CAACG,WAAW,CAAC,MAAM,IAAI,CAACD,SAAS,EAAE,CAAC,CAAA;AAC9C,KAAA;IAEA,IAAI,CAACA,SAAS,EAAE,CAAA;AAChB,IAAA,IAAI,CAACL,WAAW,CAAClO,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACyO,qBAAqB,EAAE,CAAC,CAAA;AAChF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,EAAAA,SAASA,GAAI;AACX,IAAA,IAAI,IAAI,CAACF,GAAG,CAACK,OAAO,EAAE;AACpB,MAAA,IAAI,CAACP,KAAK,CAAC/K,eAAe,CAAC,QAAQ,CAAC,CAAA;MACpC,IAAI,CAAC8K,WAAW,CAACxO,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;AAC7C,KAAC,MAAM;AACL,MAAA,IAAI,CAACwO,WAAW,CAAC9K,eAAe,CAAC,QAAQ,CAAC,CAAA;AAC1C,MAAA,IAAI,CAAC8K,WAAW,CAACxO,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC0O,UAAU,CAAC5K,QAAQ,EAAE,CAAC,CAAA;MAE1E,IAAI,IAAI,CAAC4K,UAAU,EAAE;AACnB,QAAA,IAAI,CAACD,KAAK,CAAC/K,eAAe,CAAC,QAAQ,CAAC,CAAA;AACtC,OAAC,MAAM;QACL,IAAI,CAAC+K,KAAK,CAACzO,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;AACvC,OAAA;AACF,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE+O,EAAAA,qBAAqBA,GAAI;AACvB,IAAA,IAAI,CAACL,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU,CAAA;IAClC,IAAI,CAACG,SAAS,EAAE,CAAA;AAClB,GAAA;AACF;;AC9GA;AACA;AACA;AACO,MAAMI,kBAAkB,CAAC;AAU9B;AACF;AACA;AACA;AACElV,EAAAA,WAAWA,CAAEyD,OAAO,EAAEvD,MAAM,EAAE;AAb9B;AAAA,IAAA,IAAA,CACAuD,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AACF;AACA;AACA;AAHE,IAAA,IAAA,CAIAvD,MAAM,GAAA,KAAA,CAAA,CAAA;AAOJ,IAAA,IAAI,EAAEuD,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC7B,OAAO,GAAGA,OAAO,CAAA;IAEtB,IAAI,CAACvD,MAAM,GAAGtC,YAAY,CACxBsX,kBAAkB,CAAC3P,QAAQ,EAC3BrF,MAAM,IAAI,EAAE,EACZN,gBAAgB,CAAC6D,OAAO,CAAC5D,OAAO,CAClC,CAAC,CAAA;IAED,IAAI,CAACkR,QAAQ,EAAE,CAAA;AACjB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEA,EAAAA,QAAQA,GAAI;AACV,IAAA,IAAI,IAAI,CAAC7Q,MAAM,CAAC8Q,gBAAgB,EAAE;AAChC,MAAA,OAAA;AACF,KAAA;IAEA,IAAI,IAAI,CAACvN,OAAO,CAACyG,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;AACjD,MAAA,OAAA;AACF,KAAA;;AAEA;AACA;AACA;IACA,IAAI,CAAC,IAAI,CAACzG,OAAO,CAACyG,YAAY,CAAC,UAAU,CAAC,EAAE;MAC1C,IAAI,CAACzG,OAAO,CAACwC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;AAE3C,MAAA,IAAI,CAACxC,OAAO,CAAC8C,gBAAgB,CAAC,MAAM,EAAE,MAAM;AAC1C,QAAA,IAAI,CAAC9C,OAAO,CAACkG,eAAe,CAAC,UAAU,CAAC,CAAA;AAC1C,OAAC,CAAC,CAAA;AACJ,KAAA;AAEA,IAAA,IAAI,CAAClG,OAAO,CAACwN,KAAK,EAAE,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtFaiE,kBAAkB,CAyEtB3P,QAAQ,GAAGnH,MAAM,CAACoM,MAAM,CAAC;AAC9BwG,EAAAA,gBAAgB,EAAE,KAAA;AACpB,CAAC,CAAC;;ACjFJ;AACA;AACA;AACO,MAAMmE,MAAM,CAAC;AAOlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEnV,WAAWA,CAAEyD,OAAO,EAAE;AApBtB;AAAA,IAAA,IAAA,CACAA,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AAAA,IAAA,IAAA,CACA+L,OAAO,GAAA,KAAA,CAAA,CAAA;AAiBL,IAAA,IAAI,EAAE/L,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;;AAEA;AACA,IAAA,MAAMkK,OAAO,GAAG/L,OAAO,CAAC+B,gBAAgB,CAAC,qBAAqB,CAAC,CAAA;AAC/D,IAAA,IAAI,CAACgK,OAAO,CAAC3Q,MAAM,EAAE;AACnB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC4E,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAAC+L,OAAO,GAAGA,OAAO,CAAA;AAEtB,IAAA,IAAI,CAACA,OAAO,CAAC7I,OAAO,CAAE8I,MAAM,IAAK;AAC/B,MAAA,MAAMC,QAAQ,GAAGD,MAAM,CAACvF,YAAY,CAAC,oBAAoB,CAAC,CAAA;;AAE1D;AACA;MACA,IAAI,CAACwF,QAAQ,IAAI,CAACtP,QAAQ,CAACgN,cAAc,CAACsC,QAAQ,CAAC,EAAE;AACnD,QAAA,OAAA;AACF,OAAA;;AAEA;AACA;AACAD,MAAAA,MAAM,CAACxJ,YAAY,CAAC,eAAe,EAAEyJ,QAAQ,CAAC,CAAA;AAC9CD,MAAAA,MAAM,CAAC9F,eAAe,CAAC,oBAAoB,CAAC,CAAA;AAC9C,KAAC,CAAC,CAAA;;AAEF;AACA;AACA;IACAjI,MAAM,CAAC6E,gBAAgB,CAAC,UAAU,EAAE,MAAM,IAAI,CAACoJ,yBAAyB,EAAE,CAAC,CAAA;;AAE3E;AACA;AACA;IACA,IAAI,CAACA,yBAAyB,EAAE,CAAA;;AAEhC;AACA,IAAA,IAAI,CAAClM,OAAO,CAAC8C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACmJ,WAAW,CAACnJ,KAAK,CAAC,CAAC,CAAA;AAC5E,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEkJ,EAAAA,yBAAyBA,GAAI;AAC3B,IAAA,IAAI,CAACH,OAAO,CAAC7I,OAAO,CAAE8I,MAAM,IAAK,IAAI,CAACI,mCAAmC,CAACJ,MAAM,CAAC,CAAC,CAAA;AACpF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,mCAAmCA,CAAEJ,MAAM,EAAE;AAC3C,IAAA,MAAMC,QAAQ,GAAGD,MAAM,CAACvF,YAAY,CAAC,eAAe,CAAC,CAAA;IACrD,IAAI,CAACwF,QAAQ,EAAE;AACb,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,MAAMjE,OAAO,GAAGrL,QAAQ,CAACgN,cAAc,CAACsC,QAAQ,CAAC,CAAA;IACjD,IAAIjE,OAAO,IAAIA,OAAO,CAACpG,SAAS,CAACC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;AACtE,MAAA,MAAMwK,cAAc,GAAGL,MAAM,CAACM,OAAO,CAAA;MAErCN,MAAM,CAACxJ,YAAY,CAAC,eAAe,EAAE6J,cAAc,CAAC/F,QAAQ,EAAE,CAAC,CAAA;MAC/D0B,OAAO,CAACpG,SAAS,CAAC2K,MAAM,CAAC,mCAAmC,EAAE,CAACF,cAAc,CAAC,CAAA;AAChF,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEF,WAAWA,CAAEnJ,KAAK,EAAE;AAClB,IAAA,MAAMiK,aAAa,GAAGjK,KAAK,CAACsC,MAAM,CAAA;;AAElC;IACA,IAAI,EAAE2H,aAAa,YAAY7D,gBAAgB,CAAC,IAAI6D,aAAa,CAACC,IAAI,KAAK,OAAO,EAAE;AAClF,MAAA,OAAA;AACF,KAAA;;AAEA;AACA;AACA;AACA,IAAA,MAAMyE,UAAU,GAAGhV,QAAQ,CAACoF,gBAAgB,CAAC,oCAAoC,CAAC,CAAA;AAElF,IAAA,MAAM6P,iBAAiB,GAAG3E,aAAa,CAACJ,IAAI,CAAA;AAC5C,IAAA,MAAMgF,iBAAiB,GAAG5E,aAAa,CAACP,IAAI,CAAA;AAE5CiF,IAAAA,UAAU,CAACzO,OAAO,CAAE8I,MAAM,IAAK;AAC7B,MAAA,MAAMY,gBAAgB,GAAGZ,MAAM,CAACa,IAAI,KAAK+E,iBAAiB,CAAA;AAC1D,MAAA,MAAME,WAAW,GAAG9F,MAAM,CAACU,IAAI,KAAKmF,iBAAiB,CAAA;MAErD,IAAIC,WAAW,IAAIlF,gBAAgB,EAAE;AACnC,QAAA,IAAI,CAACR,mCAAmC,CAACJ,MAAM,CAAC,CAAA;AAClD,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AACF;;ACxIA;AACA;AACA;AACO,MAAM+F,QAAQ,CAAC;AAapB;AACF;AACA;AACA;EACExV,WAAWA,CAAEyD,OAAO,EAAE;AAhBtB;AAAA,IAAA,IAAA,CACAA,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AACF;AACA;AACA;IAHE,IAIAgS,CAAAA,cAAc,GAAG,IAAI,CAAA;AAErB;IAAA,IACAC,CAAAA,qBAAqB,GAAG,KAAK,CAAA;AAO3B,IAAA,IAAI,EAAEjS,OAAO,YAAY0N,iBAAiB,CAAC,IAAI,CAAC/Q,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AAC5G,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC7B,OAAO,GAAGA,OAAO,CAAA;;AAEtB;AACA,IAAA,MAAMgS,cAAc,GAAG,IAAI,CAACE,gBAAgB,EAAE,CAAA;IAC9C,IAAI,CAACF,cAAc,EAAE;AACnB,MAAA,OAAA;AACF,KAAA;IAEA,IAAI,CAACA,cAAc,GAAGA,cAAc,CAAA;AACpC,IAAA,IAAI,CAAChS,OAAO,CAAC8C,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACqP,kBAAkB,EAAE,CAAC,CAAA;AACzE,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACED,EAAAA,gBAAgBA,GAAI;AAClB,IAAA,MAAME,eAAe,GAAG,IAAI,CAACxE,kBAAkB,EAAE,CAAA;IACjD,IAAI,CAACwE,eAAe,EAAE;AACpB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA,IAAA,OAAOzV,QAAQ,CAACgN,cAAc,CAACyI,eAAe,CAAC,CAAA;AACjD,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACED,EAAAA,kBAAkBA,GAAI;IACpB,IAAI,CAAC,IAAI,CAACH,cAAc,CAACvL,YAAY,CAAC,UAAU,CAAC,EAAE;AACjD;MACA,IAAI,CAACuL,cAAc,CAACxP,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;MAClD,IAAI,CAACwP,cAAc,CAACpQ,SAAS,CAACa,GAAG,CAAC,iCAAiC,CAAC,CAAA;;AAEpE;AACA,MAAA,IAAI,CAAC,IAAI,CAACwP,qBAAqB,EAAE;AAC/B,QAAA,IAAI,CAACD,cAAc,CAAClP,gBAAgB,CAAC,MAAM,EAAE,MAAM,IAAI,CAACuP,qBAAqB,EAAE,CAAC,CAAA;QAChF,IAAI,CAACJ,qBAAqB,GAAG,IAAI,CAAA;AACnC,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACD,cAAc,CAACxE,KAAK,EAAE,CAAA;AAC7B,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE6E,EAAAA,qBAAqBA,GAAI;AACvB,IAAA,IAAI,CAACL,cAAc,CAAC9L,eAAe,CAAC,UAAU,CAAC,CAAA;IAC/C,IAAI,CAAC8L,cAAc,CAACpQ,SAAS,CAACuE,MAAM,CAAC,iCAAiC,CAAC,CAAA;AACzE,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEyH,EAAAA,kBAAkBA,GAAI;AACpB;AACA,IAAA,IAAI,CAAC,IAAI,CAAC5N,OAAO,CAACsS,IAAI,EAAE;AACtB,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,IAAI,CAACtS,OAAO,CAACsS,IAAI,CAAC5W,KAAK,CAAC,GAAG,CAAC,CAAC0S,GAAG,EAAE,CAAA;AAC3C,GAAA;AACF;;ACzGA;AACA;AACA;AACO,MAAMmE,IAAI,CAAC;AA+BhB;AACF;AACA;EACEhW,WAAWA,CAAEyD,OAAO,EAAE;AAjCtB;AAAA,IAAA,IAAA,CACAA,OAAO,GAAA,KAAA,CAAA,CAAA;AAEP;AAAA,IAAA,IAAA,CACAwS,KAAK,GAAA,KAAA,CAAA,CAAA;AAEL;AAAA,IAAA,IAAA,CACAC,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAE,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAE;AAAEC,MAAAA,EAAE,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAA;KAAI,CAAA;AAEhD;IAAA,IACAC,CAAAA,aAAa,GAAG,2BAA2B,CAAA;AAE3C;IAAA,IACAC,CAAAA,YAAY,GAAG,KAAK,CAAA;AAEpB;AAAA,IAAA,IAAA,CACAC,aAAa,GAAA,KAAA,CAAA,CAAA;AAEb;AAAA,IAAA,IAAA,CACAC,eAAe,GAAA,KAAA,CAAA,CAAA;AAEf;AAAA,IAAA,IAAA,CACAC,iBAAiB,GAAA,KAAA,CAAA,CAAA;AAEjB;AACF;AACA;AACA;IAHE,IAIA/B,CAAAA,GAAG,GAAG,IAAI,CAAA;AAMR,IAAA,IAAI,EAAEnR,OAAO,YAAY0B,WAAW,CAAC,IAAI,CAAC/E,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACtG,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;;AAEA;AACA,IAAA,MAAM2Q,KAAK,GAAGxS,OAAO,CAAC+B,gBAAgB,CAAC,mBAAmB,CAAC,CAAA;AAC3D,IAAA,IAAI,CAACyQ,KAAK,CAACpX,MAAM,EAAE;AACjB,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;IAEA,IAAI,CAAC4E,OAAO,GAAGA,OAAO,CAAA;IACtB,IAAI,CAACwS,KAAK,GAAGA,KAAK,CAAA;;AAElB;IACA,IAAI,CAACQ,aAAa,GAAG,IAAI,CAACG,UAAU,CAACrD,IAAI,CAAC,IAAI,CAAC,CAAA;IAC/C,IAAI,CAACmD,eAAe,GAAG,IAAI,CAACG,YAAY,CAACtD,IAAI,CAAC,IAAI,CAAC,CAAA;IACnD,IAAI,CAACoD,iBAAiB,GAAG,IAAI,CAACG,YAAY,CAACvD,IAAI,CAAC,IAAI,CAAC,CAAA;IAErD,IAAI,CAACwD,qBAAqB,EAAE,CAAA;AAC9B,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEA,EAAAA,qBAAqBA,GAAI;IACvB,IAAI,CAACnC,GAAG,GAAGlT,MAAM,CAACmT,UAAU,CAAC,wBAAwB,CAAC,CAAA;;AAEtD;AACA;AACA,IAAA,IAAI,kBAAkB,IAAI,IAAI,CAACD,GAAG,EAAE;AAClC,MAAA,IAAI,CAACA,GAAG,CAACrO,gBAAgB,CAAC,QAAQ,EAAE,MAAM,IAAI,CAACyQ,SAAS,EAAE,CAAC,CAAA;AAC7D,KAAC,MAAM;AACL;AACA;MACA,IAAI,CAACpC,GAAG,CAACG,WAAW,CAAC,MAAM,IAAI,CAACiC,SAAS,EAAE,CAAC,CAAA;AAC9C,KAAA;IAEA,IAAI,CAACA,SAAS,EAAE,CAAA;AAClB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEA,EAAAA,SAASA,GAAI;AACX,IAAA,IAAI,IAAI,CAACpC,GAAG,CAACK,OAAO,EAAE;MACpB,IAAI,CAACgC,KAAK,EAAE,CAAA;AACd,KAAC,MAAM;MACL,IAAI,CAACC,QAAQ,EAAE,CAAA;AACjB,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACED,EAAAA,KAAKA,GAAI;IACP,MAAME,QAAQ,GAAG,IAAI,CAAC1T,OAAO,CAACqD,aAAa,CAAC,mBAAmB,CAAC,CAAA;IAChE,MAAMsQ,aAAa,GAAG,IAAI,CAAC3T,OAAO,CAAC+B,gBAAgB,CAAC,wBAAwB,CAAC,CAAA;IAE7E,IAAI,CAAC,IAAI,CAACyQ,KAAK,IAAI,CAACkB,QAAQ,IAAI,CAACC,aAAa,EAAE;AAC9C,MAAA,OAAA;AACF,KAAA;AAEAD,IAAAA,QAAQ,CAAClR,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;AAExCmR,IAAAA,aAAa,CAACzQ,OAAO,CAAE0Q,KAAK,IAAK;AAC/BA,MAAAA,KAAK,CAACpR,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;AAC5C,KAAC,CAAC,CAAA;AAEF,IAAA,IAAI,CAACgQ,KAAK,CAACtP,OAAO,CAAE2Q,IAAI,IAAK;AAC3B;AACA,MAAA,IAAI,CAACC,aAAa,CAACD,IAAI,CAAC,CAAA;;AAExB;MACAA,IAAI,CAAC/Q,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACkQ,aAAa,EAAE,IAAI,CAAC,CAAA;MACxDa,IAAI,CAAC/Q,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACmQ,eAAe,EAAE,IAAI,CAAC,CAAA;;AAE5D;AACA,MAAA,IAAI,CAACc,OAAO,CAACF,IAAI,CAAC,CAAA;AACpB,KAAC,CAAC,CAAA;;AAEF;AACA,IAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,MAAM,CAAChW,MAAM,CAACoS,QAAQ,CAACiC,IAAI,CAAC,IAAI,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAA;IACrE,IAAI,CAACwB,UAAU,EAAE;AACf,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACE,OAAO,CAACF,UAAU,CAAC,CAAA;;AAExB;IACA/V,MAAM,CAAC6E,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACoQ,iBAAiB,EAAE,IAAI,CAAC,CAAA;AACrE,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEO,EAAAA,QAAQA,GAAI;IACV,MAAMC,QAAQ,GAAG,IAAI,CAAC1T,OAAO,CAACqD,aAAa,CAAC,mBAAmB,CAAC,CAAA;IAChE,MAAMsQ,aAAa,GAAG,IAAI,CAAC3T,OAAO,CAAC+B,gBAAgB,CAAC,yBAAyB,CAAC,CAAA;IAE9E,IAAI,CAAC,IAAI,CAACyQ,KAAK,IAAI,CAACkB,QAAQ,IAAI,CAACC,aAAa,EAAE;AAC9C,MAAA,OAAA;AACF,KAAA;AAEAD,IAAAA,QAAQ,CAACxN,eAAe,CAAC,MAAM,CAAC,CAAA;AAEhCyN,IAAAA,aAAa,CAACzQ,OAAO,CAAE0Q,KAAK,IAAK;AAC/BA,MAAAA,KAAK,CAAC1N,eAAe,CAAC,MAAM,CAAC,CAAA;AAC/B,KAAC,CAAC,CAAA;AAEF,IAAA,IAAI,CAACsM,KAAK,CAACtP,OAAO,CAAE2Q,IAAI,IAAK;AAC3B;MACAA,IAAI,CAACM,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACnB,aAAa,EAAE,IAAI,CAAC,CAAA;MAC3Da,IAAI,CAACM,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAClB,eAAe,EAAE,IAAI,CAAC,CAAA;;AAE/D;AACA,MAAA,IAAI,CAACmB,eAAe,CAACP,IAAI,CAAC,CAAA;AAC5B,KAAC,CAAC,CAAA;;AAEF;IACA5V,MAAM,CAACkW,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACjB,iBAAiB,EAAE,IAAI,CAAC,CAAA;AACxE,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEG,EAAAA,YAAYA,GAAI;AACd,IAAA,MAAMf,IAAI,GAAGrU,MAAM,CAACoS,QAAQ,CAACiC,IAAI,CAAA;AACjC,IAAA,MAAM+B,YAAY,GAAG,IAAI,CAACJ,MAAM,CAAC3B,IAAI,CAAC,CAAA;IACtC,IAAI,CAAC+B,YAAY,EAAE;AACjB,MAAA,OAAA;AACF,KAAA;;AAEA;IACA,IAAI,IAAI,CAACtB,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,GAAG,KAAK,CAAA;AACzB,MAAA,OAAA;AACF,KAAA;;AAEA;AACA,IAAA,MAAMuB,YAAY,GAAG,IAAI,CAACC,aAAa,EAAE,CAAA;IACzC,IAAI,CAACD,YAAY,EAAE;AACjB,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACP,OAAO,CAACO,YAAY,CAAC,CAAA;AAC1B,IAAA,IAAI,CAACJ,OAAO,CAACG,YAAY,CAAC,CAAA;IAC1BA,YAAY,CAAC7G,KAAK,EAAE,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEuG,OAAOA,CAAEF,IAAI,EAAE;AACb,IAAA,IAAI,CAACW,cAAc,CAACX,IAAI,CAAC,CAAA;AACzB,IAAA,IAAI,CAACY,SAAS,CAACZ,IAAI,CAAC,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEK,OAAOA,CAAEL,IAAI,EAAE;AACb,IAAA,IAAI,CAACa,YAAY,CAACb,IAAI,CAAC,CAAA;AACvB,IAAA,IAAI,CAACc,SAAS,CAACd,IAAI,CAAC,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEI,MAAMA,CAAE3B,IAAI,EAAE;IACZ,OAAO,IAAI,CAACtS,OAAO,CAACqD,aAAa,CAAE,CAAA,wBAAA,EAA0BiP,IAAK,CAAA,EAAA,CAAG,CAAC,CAAA;AACxE,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEwB,aAAaA,CAAED,IAAI,EAAE;AACnB;AACA,IAAA,MAAMe,OAAO,GAAG,IAAI,CAACC,OAAO,CAAChB,IAAI,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAA;IAC3CjB,IAAI,CAACrR,YAAY,CAAC,IAAI,EAAG,CAAMoS,IAAAA,EAAAA,OAAQ,EAAC,CAAC,CAAA;AACzCf,IAAAA,IAAI,CAACrR,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AAChCqR,IAAAA,IAAI,CAACrR,YAAY,CAAC,eAAe,EAAEoS,OAAO,CAAC,CAAA;AAC3Cf,IAAAA,IAAI,CAACrR,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;AAC3CqR,IAAAA,IAAI,CAACrR,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;;AAEnC;AACA,IAAA,MAAMuS,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;IAClC,IAAI,CAACkB,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;AAEAA,IAAAA,MAAM,CAACvS,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;IACvCuS,MAAM,CAACvS,YAAY,CAAC,iBAAiB,EAAEqR,IAAI,CAAC7P,EAAE,CAAC,CAAA;IAC/C+Q,MAAM,CAACnT,SAAS,CAACa,GAAG,CAAC,IAAI,CAACqQ,aAAa,CAAC,CAAA;AAC1C,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEsB,eAAeA,CAAEP,IAAI,EAAE;AACrB;AACAA,IAAAA,IAAI,CAAC3N,eAAe,CAAC,IAAI,CAAC,CAAA;AAC1B2N,IAAAA,IAAI,CAAC3N,eAAe,CAAC,MAAM,CAAC,CAAA;AAC5B2N,IAAAA,IAAI,CAAC3N,eAAe,CAAC,eAAe,CAAC,CAAA;AACrC2N,IAAAA,IAAI,CAAC3N,eAAe,CAAC,eAAe,CAAC,CAAA;AACrC2N,IAAAA,IAAI,CAAC3N,eAAe,CAAC,UAAU,CAAC,CAAA;;AAEhC;AACA,IAAA,MAAM6O,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;IAClC,IAAI,CAACkB,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;AAEAA,IAAAA,MAAM,CAAC7O,eAAe,CAAC,MAAM,CAAC,CAAA;AAC9B6O,IAAAA,MAAM,CAAC7O,eAAe,CAAC,iBAAiB,CAAC,CAAA;IACzC6O,MAAM,CAACnT,SAAS,CAACuE,MAAM,CAAC,IAAI,CAAC2M,aAAa,CAAC,CAAA;AAC7C,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,UAAUA,CAAEnQ,KAAK,EAAE;AACjB,IAAA,MAAMiS,WAAW,GAAG,IAAI,CAACV,aAAa,EAAE,CAAA;AACxC,IAAA,MAAMW,QAAQ,GAAGlS,KAAK,CAACmS,aAAa,CAAA;IAEpC,IAAI,CAACF,WAAW,IAAI,EAAEC,QAAQ,YAAYxH,iBAAiB,CAAC,EAAE;AAC5D,MAAA,OAAA;AACF,KAAA;IAEA1K,KAAK,CAACkF,cAAc,EAAE,CAAA;AAEtB,IAAA,IAAI,CAAC6L,OAAO,CAACkB,WAAW,CAAC,CAAA;AACzB,IAAA,IAAI,CAACf,OAAO,CAACgB,QAAQ,CAAC,CAAA;AACtB,IAAA,IAAI,CAACE,kBAAkB,CAACF,QAAQ,CAAC,CAAA;AACnC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,kBAAkBA,CAAEvB,IAAI,EAAE;AACxB,IAAA,MAAMkB,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;IAClC,IAAI,CAACkB,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;;AAEA;AACA;AACA,IAAA,MAAMH,OAAO,GAAGG,MAAM,CAAC/Q,EAAE,CAAA;IACzB+Q,MAAM,CAAC/Q,EAAE,GAAG,EAAE,CAAA;IACd,IAAI,CAAC+O,YAAY,GAAG,IAAI,CAAA;AACxB9U,IAAAA,MAAM,CAACoS,QAAQ,CAACiC,IAAI,GAAG,IAAI,CAACuC,OAAO,CAAChB,IAAI,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAA;IAClDC,MAAM,CAAC/Q,EAAE,GAAG4Q,OAAO,CAAA;AACrB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExB,YAAYA,CAAEpQ,KAAK,EAAE;IACnB,QAAQA,KAAK,CAACiF,OAAO;AACnB,MAAA,KAAK,IAAI,CAACwK,IAAI,CAACC,IAAI,CAAA;AACnB,MAAA,KAAK,IAAI,CAACD,IAAI,CAACG,EAAE;QACf,IAAI,CAACyC,mBAAmB,EAAE,CAAA;QAC1BrS,KAAK,CAACkF,cAAc,EAAE,CAAA;AACtB,QAAA,MAAA;AACF,MAAA,KAAK,IAAI,CAACuK,IAAI,CAACE,KAAK,CAAA;AACpB,MAAA,KAAK,IAAI,CAACF,IAAI,CAACI,IAAI;QACjB,IAAI,CAACyC,eAAe,EAAE,CAAA;QACtBtS,KAAK,CAACkF,cAAc,EAAE,CAAA;AACtB,QAAA,MAAA;AACJ,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEoN,EAAAA,eAAeA,GAAI;AACjB,IAAA,MAAML,WAAW,GAAG,IAAI,CAACV,aAAa,EAAE,CAAA;AACxC,IAAA,IAAI,CAACU,WAAW,IAAI,CAACA,WAAW,CAACM,aAAa,EAAE;AAC9C,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,MAAMC,gBAAgB,GAAGP,WAAW,CAACM,aAAa,CAACE,kBAAkB,CAAA;IACrE,IAAI,CAACD,gBAAgB,EAAE;AACrB,MAAA,OAAA;AACF,KAAA;;AAEA;AACA,IAAA,MAAMN,QAAQ,GAAGM,gBAAgB,CAACnS,aAAa,CAAC,mBAAmB,CAAC,CAAA;IACpE,IAAI,CAAC6R,QAAQ,EAAE;AACb,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACnB,OAAO,CAACkB,WAAW,CAAC,CAAA;AACzB,IAAA,IAAI,CAACf,OAAO,CAACgB,QAAQ,CAAC,CAAA;IACtBA,QAAQ,CAAC1H,KAAK,EAAE,CAAA;AAChB,IAAA,IAAI,CAAC4H,kBAAkB,CAACF,QAAQ,CAAC,CAAA;AACnC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACEG,EAAAA,mBAAmBA,GAAI;AACrB,IAAA,MAAMJ,WAAW,GAAG,IAAI,CAACV,aAAa,EAAE,CAAA;AACxC,IAAA,IAAI,CAACU,WAAW,IAAI,CAACA,WAAW,CAACM,aAAa,EAAE;AAC9C,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,MAAMG,oBAAoB,GAAGT,WAAW,CAACM,aAAa,CAACI,sBAAsB,CAAA;IAC7E,IAAI,CAACD,oBAAoB,EAAE;AACzB,MAAA,OAAA;AACF,KAAA;;AAEA;AACA,IAAA,MAAMpB,YAAY,GAAGoB,oBAAoB,CAACrS,aAAa,CAAC,mBAAmB,CAAC,CAAA;IAC5E,IAAI,CAACiR,YAAY,EAAE;AACjB,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACP,OAAO,CAACkB,WAAW,CAAC,CAAA;AACzB,IAAA,IAAI,CAACf,OAAO,CAACI,YAAY,CAAC,CAAA;IAC1BA,YAAY,CAAC9G,KAAK,EAAE,CAAA;AACpB,IAAA,IAAI,CAAC4H,kBAAkB,CAACd,YAAY,CAAC,CAAA;AACvC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEU,QAAQA,CAAEnB,IAAI,EAAE;AACd,IAAA,OAAO,IAAI,CAAC7T,OAAO,CAACqD,aAAa,CAAC,IAAI,CAACwR,OAAO,CAAChB,IAAI,CAAC,CAAC,CAAA;AACvD,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEc,SAASA,CAAEd,IAAI,EAAE;AACf,IAAA,MAAMkB,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;IAClC,IAAI,CAACkB,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;IAEAA,MAAM,CAACnT,SAAS,CAACuE,MAAM,CAAC,IAAI,CAAC2M,aAAa,CAAC,CAAA;AAC7C,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE2B,SAASA,CAAEZ,IAAI,EAAE;AACf,IAAA,MAAMkB,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;IAClC,IAAI,CAACkB,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;IAEAA,MAAM,CAACnT,SAAS,CAACa,GAAG,CAAC,IAAI,CAACqQ,aAAa,CAAC,CAAA;AAC1C,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE0B,cAAcA,CAAEX,IAAI,EAAE;AACpB,IAAA,IAAI,CAACA,IAAI,CAAC0B,aAAa,EAAE;AACvB,MAAA,OAAA;AACF,KAAA;AAEA1B,IAAAA,IAAI,CAACrR,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;IAC3CqR,IAAI,CAAC0B,aAAa,CAAC3T,SAAS,CAACuE,MAAM,CAAC,iCAAiC,CAAC,CAAA;AACtE0N,IAAAA,IAAI,CAACrR,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;AACrC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEkS,YAAYA,CAAEb,IAAI,EAAE;AAClB,IAAA,IAAI,CAACA,IAAI,CAAC0B,aAAa,EAAE;AACvB,MAAA,OAAA;AACF,KAAA;AAEA1B,IAAAA,IAAI,CAACrR,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;IAC1CqR,IAAI,CAAC0B,aAAa,CAAC3T,SAAS,CAACa,GAAG,CAAC,iCAAiC,CAAC,CAAA;AACnEoR,IAAAA,IAAI,CAACrR,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;AACpC,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACE+R,EAAAA,aAAaA,GAAI;AACf,IAAA,OAAO,IAAI,CAACvU,OAAO,CAACqD,aAAa,CAAC,oDAAoD,CAAC,CAAA;AACzF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEwR,OAAOA,CAAEhB,IAAI,EAAE;AACb,IAAA,MAAMhG,IAAI,GAAGgG,IAAI,CAACpN,YAAY,CAAC,MAAM,CAAC,CAAA;AACtC,IAAA,MAAM6L,IAAI,GAAGzE,IAAI,CAACiH,KAAK,CAACjH,IAAI,CAACM,OAAO,CAAC,GAAG,CAAC,EAAEN,IAAI,CAACzS,MAAM,CAAC,CAAA;AACvD,IAAA,OAAOkX,IAAI,CAAA;AACb,GAAA;AACF;;AC3fA;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsD,OAAOA,CAAEnZ,MAAM,EAAE;EACxBA,MAAM,GAAG,OAAOA,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAG,EAAE,CAAA;;AAEpD;EACA,IAAI,CAACE,QAAQ,CAACgF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AACjE,IAAA,OAAA;AACF,GAAA;;AAEA;AACA;AACA,EAAA,MAAMgU,MAAM,GAAGpZ,MAAM,CAACqZ,KAAK,YAAYpU,WAAW,GAAGjF,MAAM,CAACqZ,KAAK,GAAGnZ,QAAQ,CAAA;AAE5E,EAAA,MAAMoZ,WAAW,GAAGF,MAAM,CAAC9T,gBAAgB,CAAC,iCAAiC,CAAC,CAAA;AAC9EgU,EAAAA,WAAW,CAAC7S,OAAO,CAAE8S,UAAU,IAAK;AAClC,IAAA,IAAIjW,SAAS,CAACiW,UAAU,EAAEvZ,MAAM,CAACwZ,SAAS,CAAC,CAAA;AAC7C,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMC,QAAQ,GAAGL,MAAM,CAAC9T,gBAAgB,CAAC,8BAA8B,CAAC,CAAA;AACxEmU,EAAAA,QAAQ,CAAChT,OAAO,CAAEa,OAAO,IAAK;AAC5B,IAAA,IAAI6D,MAAM,CAAC7D,OAAO,EAAEtH,MAAM,CAAC0Z,MAAM,CAAC,CAAA;AACpC,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMC,gBAAgB,GAAGP,MAAM,CAAC9T,gBAAgB,CAAC,uCAAuC,CAAC,CAAA;AACzFqU,EAAAA,gBAAgB,CAAClT,OAAO,CAAEmT,eAAe,IAAK;AAC5C,IAAA,IAAI3N,cAAc,CAAC2N,eAAe,EAAE5Z,MAAM,CAAC6Z,cAAc,CAAC,CAAA;AAC5D,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMC,WAAW,GAAGV,MAAM,CAAC9T,gBAAgB,CAAC,kCAAkC,CAAC,CAAA;AAC/EwU,EAAAA,WAAW,CAACrT,OAAO,CAAEsT,SAAS,IAAK;IACjC,IAAI1K,UAAU,CAAC0K,SAAS,CAAC,CAAA;AAC3B,GAAC,CAAC,CAAA;;AAEF;AACA,EAAA,MAAMC,aAAa,GAAGZ,MAAM,CAACxS,aAAa,CAAC,qCAAqC,CAAC,CAAA;AACjF,EAAA,IAAIoT,aAAa,EAAE;AACjB,IAAA,IAAIpJ,YAAY,CAACoJ,aAAa,EAAEha,MAAM,CAACia,YAAY,CAAC,CAAA;AACtD,GAAA;AAEA,EAAA,MAAMC,oBAAoB,GAAGd,MAAM,CAAC9T,gBAAgB,CAAC,sCAAsC,CAAC,CAAA;AAC5F4U,EAAAA,oBAAoB,CAACzT,OAAO,CAAEa,OAAO,IAAK;AACxC,IAAA,IAAIiL,YAAY,CAACjL,OAAO,EAAEtH,MAAM,CAACma,YAAY,CAAC,CAAA;AAChD,GAAC,CAAC,CAAA;;AAEF;AACA,EAAA,MAAMxT,OAAO,GAAGyS,MAAM,CAACxS,aAAa,CAAC,8BAA8B,CAAC,CAAA;AACpE,EAAA,IAAID,OAAO,EAAE;IACX,IAAI2N,MAAM,CAAC3N,OAAO,CAAC,CAAA;AACrB,GAAA;AAEA,EAAA,MAAMyT,oBAAoB,GAAGhB,MAAM,CAAC9T,gBAAgB,CAAC,2CAA2C,CAAC,CAAA;AACjG8U,EAAAA,oBAAoB,CAAC3T,OAAO,CAAE4T,mBAAmB,IAAK;AACpD,IAAA,IAAIrF,kBAAkB,CAACqF,mBAAmB,EAAEra,MAAM,CAACsa,kBAAkB,CAAC,CAAA;AACxE,GAAC,CAAC,CAAA;AAEF,EAAA,MAAMC,OAAO,GAAGnB,MAAM,CAAC9T,gBAAgB,CAAC,8BAA8B,CAAC,CAAA;AACvEiV,EAAAA,OAAO,CAAC9T,OAAO,CAAE+T,MAAM,IAAK;IAC1B,IAAIvF,MAAM,CAACuF,MAAM,CAAC,CAAA;AACpB,GAAC,CAAC,CAAA;;AAEF;AACA,EAAA,MAAMC,SAAS,GAAGrB,MAAM,CAACxS,aAAa,CAAC,iCAAiC,CAAC,CAAA;AACzE,EAAA,IAAI6T,SAAS,EAAE;IACb,IAAInF,QAAQ,CAACmF,SAAS,CAAC,CAAA;AACzB,GAAA;AAEA,EAAA,MAAM1E,KAAK,GAAGqD,MAAM,CAAC9T,gBAAgB,CAAC,4BAA4B,CAAC,CAAA;AACnEyQ,EAAAA,KAAK,CAACtP,OAAO,CAAEsP,KAAK,IAAK;IACvB,IAAID,IAAI,CAACC,KAAK,CAAC,CAAA;AACjB,GAAC,CAAC,CAAA;AACJ,CAAA;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}